// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pbj.proto

package telemetry

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FieldType int32

const (
	FieldType_FT_DEFAULT  FieldType = 0
	FieldType_FT_CALLBACK FieldType = 1
	FieldType_FT_POINTER  FieldType = 4
	FieldType_FT_STATIC   FieldType = 2
	FieldType_FT_IGNORE   FieldType = 3
)

var FieldType_name = map[int32]string{
	0: "FT_DEFAULT",
	1: "FT_CALLBACK",
	4: "FT_POINTER",
	2: "FT_STATIC",
	3: "FT_IGNORE",
}

var FieldType_value = map[string]int32{
	"FT_DEFAULT":  0,
	"FT_CALLBACK": 1,
	"FT_POINTER":  4,
	"FT_STATIC":   2,
	"FT_IGNORE":   3,
}

func (x FieldType) Enum() *FieldType {
	p := new(FieldType)
	*p = x
	return p
}

func (x FieldType) String() string {
	return proto.EnumName(FieldType_name, int32(x))
}

func (x *FieldType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FieldType_value, data, "FieldType")
	if err != nil {
		return err
	}
	*x = FieldType(value)
	return nil
}

func (FieldType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_adec4434a342376e, []int{0}
}

// This is the inner options message, which basically defines options for
// a field. When it is used in message or file scope, it applies to all
// fields.
type PBJOptions struct {
	// Allocated size for 'bytes' and 'string' fields.
	MaxSize *int32 `protobuf:"varint,1,opt,name=max_size,json=maxSize" json:"max_size,omitempty"`
	// Allocated number of entries in arrays ('repeated' fields)
	MaxCount *int32 `protobuf:"varint,2,opt,name=max_count,json=maxCount" json:"max_count,omitempty"`
	// Force type of field (callback or static allocation)
	Type *FieldType `protobuf:"varint,3,opt,name=type,enum=FieldType,def=0" json:"type,omitempty"`
	// Use long names for enums, i.e. EnumName_EnumValue.
	LongNames *bool `protobuf:"varint,4,opt,name=long_names,json=longNames,def=1" json:"long_names,omitempty"`
	// Add 'packed' attribute to generated structs.
	// Note: this cannot be used on CPUs that break on unaligned
	// accesses to variables.
	PackedStruct *bool `protobuf:"varint,5,opt,name=packed_struct,json=packedStruct,def=0" json:"packed_struct,omitempty"`
	// Skip this message
	SkipMessage          *bool    `protobuf:"varint,6,opt,name=skip_message,json=skipMessage,def=0" json:"skip_message,omitempty"`
	CacheSize            *bool    `protobuf:"varint,7,opt,name=cache_size,json=cacheSize,def=1" json:"cache_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PBJOptions) Reset()         { *m = PBJOptions{} }
func (m *PBJOptions) String() string { return proto.CompactTextString(m) }
func (*PBJOptions) ProtoMessage()    {}
func (*PBJOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_adec4434a342376e, []int{0}
}

func (m *PBJOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBJOptions.Unmarshal(m, b)
}
func (m *PBJOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBJOptions.Marshal(b, m, deterministic)
}
func (m *PBJOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBJOptions.Merge(m, src)
}
func (m *PBJOptions) XXX_Size() int {
	return xxx_messageInfo_PBJOptions.Size(m)
}
func (m *PBJOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_PBJOptions.DiscardUnknown(m)
}

var xxx_messageInfo_PBJOptions proto.InternalMessageInfo

const Default_PBJOptions_Type FieldType = FieldType_FT_DEFAULT
const Default_PBJOptions_LongNames bool = true
const Default_PBJOptions_PackedStruct bool = false
const Default_PBJOptions_SkipMessage bool = false
const Default_PBJOptions_CacheSize bool = true

func (m *PBJOptions) GetMaxSize() int32 {
	if m != nil && m.MaxSize != nil {
		return *m.MaxSize
	}
	return 0
}

func (m *PBJOptions) GetMaxCount() int32 {
	if m != nil && m.MaxCount != nil {
		return *m.MaxCount
	}
	return 0
}

func (m *PBJOptions) GetType() FieldType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_PBJOptions_Type
}

func (m *PBJOptions) GetLongNames() bool {
	if m != nil && m.LongNames != nil {
		return *m.LongNames
	}
	return Default_PBJOptions_LongNames
}

func (m *PBJOptions) GetPackedStruct() bool {
	if m != nil && m.PackedStruct != nil {
		return *m.PackedStruct
	}
	return Default_PBJOptions_PackedStruct
}

func (m *PBJOptions) GetSkipMessage() bool {
	if m != nil && m.SkipMessage != nil {
		return *m.SkipMessage
	}
	return Default_PBJOptions_SkipMessage
}

func (m *PBJOptions) GetCacheSize() bool {
	if m != nil && m.CacheSize != nil {
		return *m.CacheSize
	}
	return Default_PBJOptions_CacheSize
}

var E_PbjFileOption = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FileOptions)(nil),
	ExtensionType: (*PBJOptions)(nil),
	Field:         1020,
	Name:          "pbj_file_option",
	Tag:           "bytes,1020,opt,name=pbj_file_option",
	Filename:      "pbj.proto",
}

var E_PbjMessageOption = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MessageOptions)(nil),
	ExtensionType: (*PBJOptions)(nil),
	Field:         1020,
	Name:          "pbj_message_option",
	Tag:           "bytes,1020,opt,name=pbj_message_option",
	Filename:      "pbj.proto",
}

var E_PbjEnumOption = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.EnumOptions)(nil),
	ExtensionType: (*PBJOptions)(nil),
	Field:         1020,
	Name:          "pbj_enum_option",
	Tag:           "bytes,1020,opt,name=pbj_enum_option",
	Filename:      "pbj.proto",
}

var E_PbjFieldOption = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*PBJOptions)(nil),
	Field:         1020,
	Name:          "pbj_field_option",
	Tag:           "bytes,1020,opt,name=pbj_field_option",
	Filename:      "pbj.proto",
}

func init() {
	proto.RegisterEnum("FieldType", FieldType_name, FieldType_value)
	proto.RegisterType((*PBJOptions)(nil), "PBJOptions")
	proto.RegisterExtension(E_PbjFileOption)
	proto.RegisterExtension(E_PbjMessageOption)
	proto.RegisterExtension(E_PbjEnumOption)
	proto.RegisterExtension(E_PbjFieldOption)
}

func init() { proto.RegisterFile("pbj.proto", fileDescriptor_adec4434a342376e) }

var fileDescriptor_adec4434a342376e = []byte{
	// 445 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0x4f, 0x6f, 0xda, 0x40,
	0x10, 0xc5, 0x6b, 0x02, 0x4d, 0x3c, 0x04, 0x70, 0xf7, 0xe4, 0xfe, 0x53, 0x51, 0x7b, 0x41, 0x1c,
	0x1c, 0x29, 0x47, 0xdf, 0x80, 0xe2, 0x8a, 0x96, 0x42, 0x64, 0x9c, 0x4b, 0x7b, 0xb0, 0xfc, 0x67,
	0xa0, 0xeb, 0xd8, 0xde, 0x95, 0x77, 0x2d, 0x25, 0xf9, 0x14, 0xfd, 0xc0, 0x3d, 0x54, 0x6b, 0x9b,
	0x40, 0xd5, 0x36, 0x39, 0xee, 0xbc, 0x9f, 0xde, 0xbe, 0x79, 0x03, 0x3a, 0x0f, 0x13, 0x8b, 0x17,
	0x4c, 0xb2, 0x57, 0xc3, 0x1d, 0x63, 0xbb, 0x14, 0x2f, 0xaa, 0x57, 0x58, 0x6e, 0x2f, 0x62, 0x14,
	0x51, 0x41, 0xb9, 0x64, 0x45, 0x4d, 0xbc, 0xff, 0xd9, 0x02, 0xb8, 0x9a, 0x7e, 0x5e, 0x73, 0x49,
	0x59, 0x2e, 0xc8, 0x4b, 0x38, 0xcb, 0x82, 0x5b, 0x5f, 0xd0, 0x7b, 0x34, 0xb5, 0xa1, 0x36, 0xea,
	0xb8, 0xa7, 0x59, 0x70, 0xbb, 0xa1, 0xf7, 0x48, 0x5e, 0x83, 0xae, 0xa4, 0x88, 0x95, 0xb9, 0x34,
	0x5b, 0x95, 0xa6, 0xd8, 0x99, 0x7a, 0x93, 0x31, 0xb4, 0xe5, 0x1d, 0x47, 0xf3, 0x64, 0xa8, 0x8d,
	0xfa, 0x97, 0x60, 0x39, 0x14, 0xd3, 0xd8, 0xbb, 0xe3, 0x68, 0x83, 0xe3, 0xf9, 0x1f, 0xe7, 0xce,
	0xe4, 0x7a, 0xe9, 0xb9, 0x15, 0x43, 0x3e, 0x00, 0xa4, 0x2c, 0xdf, 0xf9, 0x79, 0x90, 0xa1, 0x30,
	0xdb, 0x43, 0x6d, 0x74, 0x66, 0xb7, 0x65, 0x51, 0xa2, 0xab, 0xab, 0xf9, 0x4a, 0x8d, 0xc9, 0x18,
	0x7a, 0x3c, 0x88, 0x6e, 0x30, 0xf6, 0x85, 0x2c, 0xca, 0x48, 0x9a, 0x9d, 0x8a, 0xeb, 0x6c, 0x83,
	0x54, 0xa0, 0x7b, 0x5e, 0x6b, 0x9b, 0x4a, 0x22, 0x23, 0x38, 0x17, 0x37, 0x94, 0xfb, 0x19, 0x0a,
	0x11, 0xec, 0xd0, 0x7c, 0x7e, 0x8c, 0x76, 0x95, 0xf4, 0xb5, 0x56, 0xd4, 0xd7, 0x51, 0x10, 0xfd,
	0xc0, 0x7a, 0xc1, 0xd3, 0xe3, 0xaf, 0xab, 0xb9, 0x5a, 0x74, 0xfc, 0x0d, 0xf4, 0x87, 0xf8, 0xa4,
	0x0f, 0x47, 0x0b, 0x18, 0xcf, 0xc8, 0x00, 0xba, 0x8e, 0xe7, 0xcf, 0x26, 0xcb, 0xe5, 0x74, 0x32,
	0xfb, 0x62, 0x68, 0x0d, 0x70, 0xb5, 0x5e, 0xac, 0xbc, 0xb9, 0x6b, 0xb4, 0x49, 0x0f, 0x74, 0xc7,
	0xf3, 0x37, 0xde, 0xc4, 0x5b, 0xcc, 0x8c, 0x56, 0xf3, 0x5c, 0x7c, 0x5a, 0xad, 0xdd, 0xb9, 0x71,
	0x62, 0xbb, 0x30, 0xe0, 0x61, 0xe2, 0x6f, 0x69, 0x8a, 0x3e, 0xab, 0x3a, 0x27, 0x6f, 0xac, 0xfa,
	0x48, 0xd6, 0xfe, 0x48, 0x96, 0x43, 0x53, 0x6c, 0x0e, 0x62, 0xfe, 0x52, 0x21, 0xbb, 0x97, 0x5d,
	0xeb, 0x70, 0x24, 0xb7, 0xc7, 0xc3, 0xe4, 0xc0, 0xd8, 0xdf, 0x81, 0x28, 0xcf, 0x66, 0xfb, 0xbd,
	0xed, 0xbb, 0xbf, 0x6c, 0x9b, 0x12, 0x1e, 0x73, 0x36, 0x78, 0x98, 0xfc, 0x81, 0xed, 0x03, 0x63,
	0x5e, 0x66, 0xff, 0x0f, 0x3c, 0xcf, 0xcb, 0xec, 0xa9, 0xc0, 0x07, 0xc6, 0xbe, 0x06, 0xa3, 0x2e,
	0x01, 0xd3, 0x78, 0x6f, 0xfa, 0xf6, 0x1f, 0x2d, 0x60, 0x1a, 0x3f, 0xe6, 0xda, 0xaf, 0x6a, 0x78,
	0x80, 0xa6, 0x2f, 0x60, 0x90, 0xa3, 0xb4, 0x92, 0x32, 0xa7, 0x1c, 0x0b, 0x8b, 0x87, 0xc9, 0xef,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xf2, 0x66, 0xfe, 0x8a, 0x0b, 0x03, 0x00, 0x00,
}
