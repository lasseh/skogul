// Code generated by protoc-gen-go. DO NOT EDIT.
// source: qmon.proto

package telemetry

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type QueueMonitor struct {
	QueueMonitorElementInfo []*QueueMonitorElement `protobuf:"bytes,1,rep,name=queue_monitor_element_info,json=queueMonitorElementInfo" json:"queue_monitor_element_info,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}               `json:"-"`
	XXX_unrecognized        []byte                 `json:"-"`
	XXX_sizecache           int32                  `json:"-"`
}

func (m *QueueMonitor) Reset()         { *m = QueueMonitor{} }
func (m *QueueMonitor) String() string { return proto.CompactTextString(m) }
func (*QueueMonitor) ProtoMessage()    {}
func (*QueueMonitor) Descriptor() ([]byte, []int) {
	return fileDescriptor_b0a18ca619b514d6, []int{0}
}

func (m *QueueMonitor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueueMonitor.Unmarshal(m, b)
}
func (m *QueueMonitor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueueMonitor.Marshal(b, m, deterministic)
}
func (m *QueueMonitor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueueMonitor.Merge(m, src)
}
func (m *QueueMonitor) XXX_Size() int {
	return xxx_messageInfo_QueueMonitor.Size(m)
}
func (m *QueueMonitor) XXX_DiscardUnknown() {
	xxx_messageInfo_QueueMonitor.DiscardUnknown(m)
}

var xxx_messageInfo_QueueMonitor proto.InternalMessageInfo

func (m *QueueMonitor) GetQueueMonitorElementInfo() []*QueueMonitorElement {
	if m != nil {
		return m.QueueMonitorElementInfo
	}
	return nil
}

// QueueMonitorElement for an interface
type QueueMonitorElement struct {
	// interface name
	IfName *string `protobuf:"bytes,1,req,name=if_name,json=ifName" json:"if_name,omitempty"`
	// parent ae interface name
	ParentAeName *string `protobuf:"bytes,2,opt,name=parent_ae_name,json=parentAeName" json:"parent_ae_name,omitempty"`
	// ingress stats
	QueueMonitorStatsIngress *QueueMonitorDirection `protobuf:"bytes,3,opt,name=queue_monitor_stats_ingress,json=queueMonitorStatsIngress" json:"queue_monitor_stats_ingress,omitempty"`
	// egress stats
	QueueMonitorStatsEgress *QueueMonitorDirection `protobuf:"bytes,4,opt,name=queue_monitor_stats_egress,json=queueMonitorStatsEgress" json:"queue_monitor_stats_egress,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}               `json:"-"`
	XXX_unrecognized        []byte                 `json:"-"`
	XXX_sizecache           int32                  `json:"-"`
}

func (m *QueueMonitorElement) Reset()         { *m = QueueMonitorElement{} }
func (m *QueueMonitorElement) String() string { return proto.CompactTextString(m) }
func (*QueueMonitorElement) ProtoMessage()    {}
func (*QueueMonitorElement) Descriptor() ([]byte, []int) {
	return fileDescriptor_b0a18ca619b514d6, []int{1}
}

func (m *QueueMonitorElement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueueMonitorElement.Unmarshal(m, b)
}
func (m *QueueMonitorElement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueueMonitorElement.Marshal(b, m, deterministic)
}
func (m *QueueMonitorElement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueueMonitorElement.Merge(m, src)
}
func (m *QueueMonitorElement) XXX_Size() int {
	return xxx_messageInfo_QueueMonitorElement.Size(m)
}
func (m *QueueMonitorElement) XXX_DiscardUnknown() {
	xxx_messageInfo_QueueMonitorElement.DiscardUnknown(m)
}

var xxx_messageInfo_QueueMonitorElement proto.InternalMessageInfo

func (m *QueueMonitorElement) GetIfName() string {
	if m != nil && m.IfName != nil {
		return *m.IfName
	}
	return ""
}

func (m *QueueMonitorElement) GetParentAeName() string {
	if m != nil && m.ParentAeName != nil {
		return *m.ParentAeName
	}
	return ""
}

func (m *QueueMonitorElement) GetQueueMonitorStatsIngress() *QueueMonitorDirection {
	if m != nil {
		return m.QueueMonitorStatsIngress
	}
	return nil
}

func (m *QueueMonitorElement) GetQueueMonitorStatsEgress() *QueueMonitorDirection {
	if m != nil {
		return m.QueueMonitorStatsEgress
	}
	return nil
}

type QueueMonitorDirection struct {
	QueueMonitorStatsInfo []*QueueMonitorStats `protobuf:"bytes,1,rep,name=queue_monitor_stats_info,json=queueMonitorStatsInfo" json:"queue_monitor_stats_info,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}             `json:"-"`
	XXX_unrecognized      []byte               `json:"-"`
	XXX_sizecache         int32                `json:"-"`
}

func (m *QueueMonitorDirection) Reset()         { *m = QueueMonitorDirection{} }
func (m *QueueMonitorDirection) String() string { return proto.CompactTextString(m) }
func (*QueueMonitorDirection) ProtoMessage()    {}
func (*QueueMonitorDirection) Descriptor() ([]byte, []int) {
	return fileDescriptor_b0a18ca619b514d6, []int{2}
}

func (m *QueueMonitorDirection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueueMonitorDirection.Unmarshal(m, b)
}
func (m *QueueMonitorDirection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueueMonitorDirection.Marshal(b, m, deterministic)
}
func (m *QueueMonitorDirection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueueMonitorDirection.Merge(m, src)
}
func (m *QueueMonitorDirection) XXX_Size() int {
	return xxx_messageInfo_QueueMonitorDirection.Size(m)
}
func (m *QueueMonitorDirection) XXX_DiscardUnknown() {
	xxx_messageInfo_QueueMonitorDirection.DiscardUnknown(m)
}

var xxx_messageInfo_QueueMonitorDirection proto.InternalMessageInfo

func (m *QueueMonitorDirection) GetQueueMonitorStatsInfo() []*QueueMonitorStats {
	if m != nil {
		return m.QueueMonitorStatsInfo
	}
	return nil
}

// QueueMonitorStats for a queue
type QueueMonitorStats struct {
	// queue number, 0-7
	QueueNumber *uint32 `protobuf:"varint,1,req,name=queue_number,json=queueNumber" json:"queue_number,omitempty"`
	// queue id, 0-max(16k for version 1)
	QueueId *uint32 `protobuf:"varint,2,req,name=queue_id,json=queueId" json:"queue_id,omitempty"`
	// peak_buffer_occupancy in bytes
	PeakBufferOccupancyBytes *uint32 `protobuf:"varint,3,req,name=peak_buffer_occupancy_bytes,json=peakBufferOccupancyBytes" json:"peak_buffer_occupancy_bytes,omitempty"`
	// (peak_buffer_occupancy/max_queue_size) * 100
	PeakBufferOccupancyPercent *uint32 `protobuf:"varint,4,opt,name=peak_buffer_occupancy_percent,json=peakBufferOccupancyPercent" json:"peak_buffer_occupancy_percent,omitempty"`
	// Count of packets/bytes forwarded
	Packets *uint64 `protobuf:"varint,5,req,name=packets" json:"packets,omitempty"`
	Octets  *uint64 `protobuf:"varint,6,req,name=octets" json:"octets,omitempty"`
	// Count of packets/bytes due to dropped tail/force/error
	TailDropPackets *uint64 `protobuf:"varint,7,req,name=tail_drop_packets,json=tailDropPackets" json:"tail_drop_packets,omitempty"`
	TailDropOctets  *uint64 `protobuf:"varint,8,req,name=tail_drop_octets,json=tailDropOctets" json:"tail_drop_octets,omitempty"`
	// Count of packets/bytes due to WRED color 0
	RedDropPacketsColor_0 *uint64 `protobuf:"varint,9,req,name=red_drop_packets_color_0,json=redDropPacketsColor0" json:"red_drop_packets_color_0,omitempty"`
	RedDropOctetsColor_0  *uint64 `protobuf:"varint,10,req,name=red_drop_octets_color_0,json=redDropOctetsColor0" json:"red_drop_octets_color_0,omitempty"`
	// Count of packets/bytes due to WRED color 1
	RedDropPacketsColor_1 *uint64 `protobuf:"varint,11,req,name=red_drop_packets_color_1,json=redDropPacketsColor1" json:"red_drop_packets_color_1,omitempty"`
	RedDropOctetsColor_1  *uint64 `protobuf:"varint,12,req,name=red_drop_octets_color_1,json=redDropOctetsColor1" json:"red_drop_octets_color_1,omitempty"`
	// Count of packets/bytes due to WRED color 2
	RedDropPacketsColor_2 *uint64 `protobuf:"varint,13,req,name=red_drop_packets_color_2,json=redDropPacketsColor2" json:"red_drop_packets_color_2,omitempty"`
	RedDropOctetsColor_2  *uint64 `protobuf:"varint,14,req,name=red_drop_octets_color_2,json=redDropOctetsColor2" json:"red_drop_octets_color_2,omitempty"`
	// Count of packets/bytes due to WRED color 3
	RedDropPacketsColor_3 *uint64  `protobuf:"varint,15,req,name=red_drop_packets_color_3,json=redDropPacketsColor3" json:"red_drop_packets_color_3,omitempty"`
	RedDropOctetsColor_3  *uint64  `protobuf:"varint,16,req,name=red_drop_octets_color_3,json=redDropOctetsColor3" json:"red_drop_octets_color_3,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *QueueMonitorStats) Reset()         { *m = QueueMonitorStats{} }
func (m *QueueMonitorStats) String() string { return proto.CompactTextString(m) }
func (*QueueMonitorStats) ProtoMessage()    {}
func (*QueueMonitorStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_b0a18ca619b514d6, []int{3}
}

func (m *QueueMonitorStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueueMonitorStats.Unmarshal(m, b)
}
func (m *QueueMonitorStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueueMonitorStats.Marshal(b, m, deterministic)
}
func (m *QueueMonitorStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueueMonitorStats.Merge(m, src)
}
func (m *QueueMonitorStats) XXX_Size() int {
	return xxx_messageInfo_QueueMonitorStats.Size(m)
}
func (m *QueueMonitorStats) XXX_DiscardUnknown() {
	xxx_messageInfo_QueueMonitorStats.DiscardUnknown(m)
}

var xxx_messageInfo_QueueMonitorStats proto.InternalMessageInfo

func (m *QueueMonitorStats) GetQueueNumber() uint32 {
	if m != nil && m.QueueNumber != nil {
		return *m.QueueNumber
	}
	return 0
}

func (m *QueueMonitorStats) GetQueueId() uint32 {
	if m != nil && m.QueueId != nil {
		return *m.QueueId
	}
	return 0
}

func (m *QueueMonitorStats) GetPeakBufferOccupancyBytes() uint32 {
	if m != nil && m.PeakBufferOccupancyBytes != nil {
		return *m.PeakBufferOccupancyBytes
	}
	return 0
}

func (m *QueueMonitorStats) GetPeakBufferOccupancyPercent() uint32 {
	if m != nil && m.PeakBufferOccupancyPercent != nil {
		return *m.PeakBufferOccupancyPercent
	}
	return 0
}

func (m *QueueMonitorStats) GetPackets() uint64 {
	if m != nil && m.Packets != nil {
		return *m.Packets
	}
	return 0
}

func (m *QueueMonitorStats) GetOctets() uint64 {
	if m != nil && m.Octets != nil {
		return *m.Octets
	}
	return 0
}

func (m *QueueMonitorStats) GetTailDropPackets() uint64 {
	if m != nil && m.TailDropPackets != nil {
		return *m.TailDropPackets
	}
	return 0
}

func (m *QueueMonitorStats) GetTailDropOctets() uint64 {
	if m != nil && m.TailDropOctets != nil {
		return *m.TailDropOctets
	}
	return 0
}

func (m *QueueMonitorStats) GetRedDropPacketsColor_0() uint64 {
	if m != nil && m.RedDropPacketsColor_0 != nil {
		return *m.RedDropPacketsColor_0
	}
	return 0
}

func (m *QueueMonitorStats) GetRedDropOctetsColor_0() uint64 {
	if m != nil && m.RedDropOctetsColor_0 != nil {
		return *m.RedDropOctetsColor_0
	}
	return 0
}

func (m *QueueMonitorStats) GetRedDropPacketsColor_1() uint64 {
	if m != nil && m.RedDropPacketsColor_1 != nil {
		return *m.RedDropPacketsColor_1
	}
	return 0
}

func (m *QueueMonitorStats) GetRedDropOctetsColor_1() uint64 {
	if m != nil && m.RedDropOctetsColor_1 != nil {
		return *m.RedDropOctetsColor_1
	}
	return 0
}

func (m *QueueMonitorStats) GetRedDropPacketsColor_2() uint64 {
	if m != nil && m.RedDropPacketsColor_2 != nil {
		return *m.RedDropPacketsColor_2
	}
	return 0
}

func (m *QueueMonitorStats) GetRedDropOctetsColor_2() uint64 {
	if m != nil && m.RedDropOctetsColor_2 != nil {
		return *m.RedDropOctetsColor_2
	}
	return 0
}

func (m *QueueMonitorStats) GetRedDropPacketsColor_3() uint64 {
	if m != nil && m.RedDropPacketsColor_3 != nil {
		return *m.RedDropPacketsColor_3
	}
	return 0
}

func (m *QueueMonitorStats) GetRedDropOctetsColor_3() uint64 {
	if m != nil && m.RedDropOctetsColor_3 != nil {
		return *m.RedDropOctetsColor_3
	}
	return 0
}

var E_JnprQmonExt = &proto.ExtensionDesc{
	ExtendedType:  (*JuniperNetworksSensors)(nil),
	ExtensionType: (*QueueMonitor)(nil),
	Field:         15,
	Name:          "jnpr_qmon_ext",
	Tag:           "bytes,15,opt,name=jnpr_qmon_ext",
	Filename:      "qmon.proto",
}

func init() {
	proto.RegisterType((*QueueMonitor)(nil), "QueueMonitor")
	proto.RegisterType((*QueueMonitorElement)(nil), "QueueMonitorElement")
	proto.RegisterType((*QueueMonitorDirection)(nil), "QueueMonitorDirection")
	proto.RegisterType((*QueueMonitorStats)(nil), "QueueMonitorStats")
	proto.RegisterExtension(E_JnprQmonExt)
}

func init() { proto.RegisterFile("qmon.proto", fileDescriptor_b0a18ca619b514d6) }

var fileDescriptor_b0a18ca619b514d6 = []byte{
	// 610 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x94, 0xdd, 0x4e, 0xdb, 0x30,
	0x18, 0x86, 0x95, 0x00, 0xfd, 0xf9, 0xda, 0x42, 0x31, 0xb0, 0x5a, 0x20, 0xb4, 0xa8, 0x3b, 0xa9,
	0x34, 0x89, 0xd1, 0xf6, 0x6c, 0xd3, 0xc4, 0xd6, 0x81, 0x34, 0x90, 0xc6, 0x4f, 0xd0, 0x0e, 0x76,
	0x64, 0xa5, 0xe9, 0x97, 0x29, 0x94, 0xd8, 0xc6, 0x71, 0x35, 0x38, 0x9b, 0xb6, 0x4b, 0xd8, 0x1d,
	0x72, 0x25, 0x53, 0xec, 0xb6, 0x4b, 0x47, 0x4b, 0xcf, 0x5a, 0x7f, 0xef, 0xf3, 0x3e, 0xb1, 0xad,
	0x04, 0xe0, 0x2e, 0x11, 0xfc, 0x40, 0x2a, 0xa1, 0xc5, 0x6e, 0x59, 0xf6, 0x6f, 0xc6, 0x3f, 0xb7,
	0x34, 0xde, 0x62, 0x82, 0x5a, 0x3d, 0x30, 0x2d, 0xa4, 0x5d, 0x6c, 0xc6, 0x50, 0xbd, 0x1a, 0xe1,
	0x08, 0xbf, 0x08, 0x1e, 0x6b, 0xa1, 0xc8, 0x37, 0xd8, 0xbd, 0xcb, 0xfe, 0xb3, 0xc4, 0x2e, 0x30,
	0xc3, 0x70, 0xcd, 0x62, 0x1e, 0x09, 0xea, 0x78, 0x2b, 0xad, 0x4a, 0x67, 0xfb, 0x20, 0x8f, 0x9c,
	0xd8, 0x40, 0xaf, 0xf0, 0x78, 0xb4, 0x52, 0xff, 0x59, 0xf7, 0x1b, 0x77, 0x4f, 0x87, 0xa7, 0x3c,
	0x12, 0xcd, 0x3f, 0x2e, 0x6c, 0xcd, 0x01, 0xc9, 0x2b, 0x28, 0xc6, 0x11, 0xe3, 0x41, 0x82, 0xd4,
	0xf1, 0xdc, 0x56, 0xb9, 0x07, 0x8f, 0x47, 0x2e, 0x5d, 0xfd, 0xf5, 0xc1, 0x2d, 0x39, 0x7e, 0x21,
	0x8e, 0xce, 0x83, 0x04, 0xc9, 0x6b, 0x58, 0x97, 0x81, 0xca, 0x1e, 0x24, 0x40, 0x9b, 0x75, 0x3d,
	0xa7, 0x55, 0xee, 0xad, 0x99, 0xac, 0x5f, 0xb5, 0xc3, 0x8f, 0x68, 0xc2, 0x5f, 0x61, 0x6f, 0x76,
	0x13, 0xa9, 0x0e, 0x74, 0xca, 0x62, 0xfe, 0x5d, 0x61, 0x9a, 0xd2, 0x15, 0xcf, 0x69, 0x55, 0x3a,
	0x2f, 0x66, 0x76, 0x71, 0x1c, 0x2b, 0x0c, 0x75, 0x2c, 0xb8, 0x4f, 0xf3, 0xcf, 0x7f, 0x9d, 0x81,
	0xa7, 0x96, 0x23, 0xd7, 0xff, 0x9f, 0x8d, 0xad, 0x45, 0xdb, 0xba, 0xfa, 0x6c, 0x6b, 0xe3, 0x49,
	0xeb, 0x89, 0xc1, 0x9a, 0x43, 0xd8, 0x99, 0x4b, 0x10, 0x1f, 0xe8, 0xfc, 0x4d, 0x4c, 0xef, 0x81,
	0xcc, 0xb8, 0x4c, 0xa9, 0x39, 0x8f, 0x7a, 0xc9, 0xdf, 0x99, 0xb3, 0x89, 0x48, 0x34, 0x7f, 0x17,
	0x61, 0xf3, 0x09, 0x43, 0x5a, 0x50, 0xb5, 0x26, 0x3e, 0x4a, 0xfa, 0xa8, 0xcc, 0x2d, 0xd4, 0x7a,
	0x6b, 0xf6, 0x02, 0x2a, 0x66, 0x74, 0x6e, 0x26, 0xc4, 0x83, 0x92, 0x4d, 0xc6, 0x03, 0xea, 0xe6,
	0x53, 0x45, 0xb3, 0x7c, 0x3a, 0x20, 0xc7, 0xb0, 0x27, 0x31, 0x18, 0xb2, 0xfe, 0x28, 0x8a, 0x50,
	0x31, 0x11, 0x86, 0x23, 0x19, 0xf0, 0xf0, 0x81, 0xf5, 0x1f, 0x34, 0x66, 0x47, 0x3f, 0x81, 0x3c,
	0xc7, 0xa7, 0x59, 0xb2, 0x67, 0x82, 0x17, 0x93, 0x5c, 0x2f, 0x8b, 0x91, 0xcf, 0xb0, 0x3f, 0xbf,
	0x45, 0xa2, 0x0a, 0x91, 0x6b, 0x73, 0xd8, 0xd3, 0x9e, 0xdd, 0x39, 0x3d, 0x97, 0x36, 0x48, 0x5e,
	0x42, 0x51, 0x06, 0xe1, 0x10, 0x75, 0x4a, 0xd7, 0x3c, 0xb7, 0xb5, 0x6a, 0x18, 0xea, 0xf8, 0x93,
	0x55, 0xb2, 0x0f, 0x05, 0x11, 0xea, 0x6c, 0x5e, 0xc8, 0xcf, 0xc7, 0x8b, 0xa4, 0x0d, 0x9b, 0x3a,
	0x88, 0x6f, 0xd9, 0x40, 0x09, 0xc9, 0x26, 0x4d, 0xc5, 0x7c, 0x72, 0x23, 0x9b, 0x1f, 0x2b, 0x21,
	0x2f, 0xc7, 0x8d, 0x6f, 0xa0, 0xfe, 0x0f, 0x19, 0x77, 0x97, 0xf2, 0xc4, 0xfa, 0x84, 0xb8, 0xb0,
	0x8e, 0xf7, 0x40, 0x15, 0x0e, 0x66, 0x14, 0x2c, 0x14, 0xb7, 0x42, 0xb1, 0x43, 0x5a, 0xce, 0x83,
	0xdb, 0x0a, 0x07, 0x39, 0xd3, 0xa7, 0x2c, 0x73, 0x48, 0xde, 0x41, 0x63, 0x8a, 0x5b, 0xdd, 0x94,
	0x86, 0x3c, 0xbd, 0x35, 0xa6, 0xad, 0x75, 0x0c, 0x2f, 0x76, 0xb7, 0x69, 0x65, 0x99, 0xbb, 0xbd,
	0xd8, 0xdd, 0xa6, 0xd5, 0x25, 0xee, 0xf6, 0x33, 0xee, 0x0e, 0xad, 0x2d, 0x73, 0x77, 0x16, 0xbb,
	0x3b, 0x74, 0x7d, 0x89, 0xbb, 0xf3, 0x8c, 0xbb, 0x4b, 0x37, 0x96, 0xb9, 0xbb, 0x8b, 0xdd, 0x5d,
	0x5a, 0x5f, 0xe2, 0xee, 0xbe, 0x3d, 0x83, 0xda, 0x0d, 0x97, 0x8a, 0x65, 0x9f, 0x69, 0x86, 0xf7,
	0x9a, 0x34, 0x0e, 0xce, 0x46, 0x3c, 0x96, 0xa8, 0xce, 0x51, 0xff, 0x10, 0x6a, 0x98, 0x5e, 0x23,
	0x4f, 0x85, 0x4a, 0xe9, 0x86, 0xf9, 0xa6, 0xd4, 0x66, 0xde, 0x73, 0xbf, 0x92, 0xc1, 0x57, 0x89,
	0xe0, 0x27, 0xf7, 0xfa, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe8, 0x62, 0x54, 0xa1, 0xec, 0x05,
	0x00, 0x00,
}
