// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bbe-smgd_sub_mgmt_network_stats_oc.proto

package telemetry

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type JunosNetworkStats struct {
	System               *JunosNetworkStatsSystemType `protobuf:"bytes,151,opt,name=system" json:"system,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *JunosNetworkStats) Reset()         { *m = JunosNetworkStats{} }
func (m *JunosNetworkStats) String() string { return proto.CompactTextString(m) }
func (*JunosNetworkStats) ProtoMessage()    {}
func (*JunosNetworkStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcec3dee7e0b9012, []int{0}
}

func (m *JunosNetworkStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JunosNetworkStats.Unmarshal(m, b)
}
func (m *JunosNetworkStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JunosNetworkStats.Marshal(b, m, deterministic)
}
func (m *JunosNetworkStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosNetworkStats.Merge(m, src)
}
func (m *JunosNetworkStats) XXX_Size() int {
	return xxx_messageInfo_JunosNetworkStats.Size(m)
}
func (m *JunosNetworkStats) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosNetworkStats.DiscardUnknown(m)
}

var xxx_messageInfo_JunosNetworkStats proto.InternalMessageInfo

func (m *JunosNetworkStats) GetSystem() *JunosNetworkStatsSystemType {
	if m != nil {
		return m.System
	}
	return nil
}

type JunosNetworkStatsSystemType struct {
	SubscriberManagement *JunosNetworkStatsSystemTypeSubscriberManagementType `protobuf:"bytes,151,opt,name=subscriber_management,json=subscriberManagement" json:"subscriber_management,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                             `json:"-"`
	XXX_unrecognized     []byte                                               `json:"-"`
	XXX_sizecache        int32                                                `json:"-"`
}

func (m *JunosNetworkStatsSystemType) Reset()         { *m = JunosNetworkStatsSystemType{} }
func (m *JunosNetworkStatsSystemType) String() string { return proto.CompactTextString(m) }
func (*JunosNetworkStatsSystemType) ProtoMessage()    {}
func (*JunosNetworkStatsSystemType) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcec3dee7e0b9012, []int{0, 0}
}

func (m *JunosNetworkStatsSystemType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JunosNetworkStatsSystemType.Unmarshal(m, b)
}
func (m *JunosNetworkStatsSystemType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JunosNetworkStatsSystemType.Marshal(b, m, deterministic)
}
func (m *JunosNetworkStatsSystemType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosNetworkStatsSystemType.Merge(m, src)
}
func (m *JunosNetworkStatsSystemType) XXX_Size() int {
	return xxx_messageInfo_JunosNetworkStatsSystemType.Size(m)
}
func (m *JunosNetworkStatsSystemType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosNetworkStatsSystemType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosNetworkStatsSystemType proto.InternalMessageInfo

func (m *JunosNetworkStatsSystemType) GetSubscriberManagement() *JunosNetworkStatsSystemTypeSubscriberManagementType {
	if m != nil {
		return m.SubscriberManagement
	}
	return nil
}

type JunosNetworkStatsSystemTypeSubscriberManagementType struct {
	Infra                *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraType `protobuf:"bytes,151,opt,name=infra" json:"infra,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                      `json:"-"`
	XXX_unrecognized     []byte                                                        `json:"-"`
	XXX_sizecache        int32                                                         `json:"-"`
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementType) Reset() {
	*m = JunosNetworkStatsSystemTypeSubscriberManagementType{}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementType) ProtoMessage() {}
func (*JunosNetworkStatsSystemTypeSubscriberManagementType) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcec3dee7e0b9012, []int{0, 0, 0}
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementType.Unmarshal(m, b)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementType.Marshal(b, m, deterministic)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementType.Merge(m, src)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementType) XXX_Size() int {
	return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementType.Size(m)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementType proto.InternalMessageInfo

func (m *JunosNetworkStatsSystemTypeSubscriberManagementType) GetInfra() *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraType {
	if m != nil {
		return m.Infra
	}
	return nil
}

type JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraType struct {
	Network              *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkType `protobuf:"bytes,151,opt,name=network" json:"network,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                 `json:"-"`
	XXX_unrecognized     []byte                                                                   `json:"-"`
	XXX_sizecache        int32                                                                    `json:"-"`
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraType) Reset() {
	*m = JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraType{}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraType) ProtoMessage() {}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraType) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcec3dee7e0b9012, []int{0, 0, 0, 0}
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraType.Unmarshal(m, b)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraType.Marshal(b, m, deterministic)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraType.Merge(m, src)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraType) XXX_Size() int {
	return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraType.Size(m)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraType proto.InternalMessageInfo

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraType) GetNetwork() *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkType {
	if m != nil {
		return m.Network
	}
	return nil
}

type JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkType struct {
	Io                   *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType    `protobuf:"bytes,151,opt,name=io" json:"io,omitempty"`
	Dhcp                 *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType  `protobuf:"bytes,152,opt,name=dhcp" json:"dhcp,omitempty"`
	Ppp                  *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType   `protobuf:"bytes,153,opt,name=ppp" json:"ppp,omitempty"`
	Pppoe                *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppoeType `protobuf:"bytes,154,opt,name=pppoe" json:"pppoe,omitempty"`
	L2Tp                 *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType  `protobuf:"bytes,155,opt,name=l2tp" json:"l2tp,omitempty"`
	Dvlan                *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDvlanType `protobuf:"bytes,156,opt,name=dvlan" json:"dvlan,omitempty"`
	Hag                  *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType   `protobuf:"bytes,157,opt,name=hag" json:"hag,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                          `json:"-"`
	XXX_unrecognized     []byte                                                                            `json:"-"`
	XXX_sizecache        int32                                                                             `json:"-"`
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkType) Reset() {
	*m = JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkType{}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkType) ProtoMessage() {}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkType) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcec3dee7e0b9012, []int{0, 0, 0, 0, 0}
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkType.Unmarshal(m, b)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkType.Marshal(b, m, deterministic)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkType.Merge(m, src)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkType) XXX_Size() int {
	return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkType.Size(m)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkType proto.InternalMessageInfo

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkType) GetIo() *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType {
	if m != nil {
		return m.Io
	}
	return nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkType) GetDhcp() *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType {
	if m != nil {
		return m.Dhcp
	}
	return nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkType) GetPpp() *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType {
	if m != nil {
		return m.Ppp
	}
	return nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkType) GetPppoe() *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppoeType {
	if m != nil {
		return m.Pppoe
	}
	return nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkType) GetL2Tp() *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType {
	if m != nil {
		return m.L2Tp
	}
	return nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkType) GetDvlan() *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDvlanType {
	if m != nil {
		return m.Dvlan
	}
	return nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkType) GetHag() *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType {
	if m != nil {
		return m.Hag
	}
	return nil
}

type JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType struct {
	L2RxPacketsCnt                   *uint64  `protobuf:"varint,51,opt,name=l2_rx_packets_cnt,json=l2RxPacketsCnt" json:"l2_rx_packets_cnt,omitempty"`
	L2RxPacketsFailed                *uint64  `protobuf:"varint,52,opt,name=l2_rx_packets_failed,json=l2RxPacketsFailed" json:"l2_rx_packets_failed,omitempty"`
	L2RxMalformedCnt                 *uint64  `protobuf:"varint,53,opt,name=l2_rx_malformed_cnt,json=l2RxMalformedCnt" json:"l2_rx_malformed_cnt,omitempty"`
	L2RxIfdInvalid                   *uint64  `protobuf:"varint,54,opt,name=l2_rx_ifd_invalid,json=l2RxIfdInvalid" json:"l2_rx_ifd_invalid,omitempty"`
	L2RxIflInvalid                   *uint64  `protobuf:"varint,55,opt,name=l2_rx_ifl_invalid,json=l2RxIflInvalid" json:"l2_rx_ifl_invalid,omitempty"`
	L2RxNoIffCnt                     *uint64  `protobuf:"varint,56,opt,name=l2_rx_no_iff_cnt,json=l2RxNoIffCnt" json:"l2_rx_no_iff_cnt,omitempty"`
	L2RxIfCreateFailed               *uint64  `protobuf:"varint,57,opt,name=l2_rx_if_create_failed,json=l2RxIfCreateFailed" json:"l2_rx_if_create_failed,omitempty"`
	L2BbeIoRcvL3UnknownAddressFamily *uint64  `protobuf:"varint,58,opt,name=l2_bbe_io_rcv_l3_unknown_address_family,json=l2BbeIoRcvL3UnknownAddressFamily" json:"l2_bbe_io_rcv_l3_unknown_address_family,omitempty"`
	L2RxUnsupportedInetProtocol      *uint64  `protobuf:"varint,59,opt,name=l2_rx_unsupported_inet_protocol,json=l2RxUnsupportedInetProtocol" json:"l2_rx_unsupported_inet_protocol,omitempty"`
	L2RxUnsupportedInet6Protocol     *uint64  `protobuf:"varint,60,opt,name=l2_rx_unsupported_inet6_protocol,json=l2RxUnsupportedInet6Protocol" json:"l2_rx_unsupported_inet6_protocol,omitempty"`
	L2RxUnsupportedUdpProtocol       *uint64  `protobuf:"varint,61,opt,name=l2_rx_unsupported_udp_protocol,json=l2RxUnsupportedUdpProtocol" json:"l2_rx_unsupported_udp_protocol,omitempty"`
	L2RxUnsupportedPuntAf            *uint64  `protobuf:"varint,62,opt,name=l2_rx_unsupported_punt_af,json=l2RxUnsupportedPuntAf" json:"l2_rx_unsupported_punt_af,omitempty"`
	L2RxV4DataPathPuntPkt            *uint64  `protobuf:"varint,63,opt,name=l2_rx_v4_data_path_punt_pkt,json=l2RxV4DataPathPuntPkt" json:"l2_rx_v4_data_path_punt_pkt,omitempty"`
	L2RxV4DataPathPuntPktDrop        *uint64  `protobuf:"varint,64,opt,name=l2_rx_v4_data_path_punt_pkt_drop,json=l2RxV4DataPathPuntPktDrop" json:"l2_rx_v4_data_path_punt_pkt_drop,omitempty"`
	L2RxV6DataPathPuntPkt            *uint64  `protobuf:"varint,65,opt,name=l2_rx_v6_data_path_punt_pkt,json=l2RxV6DataPathPuntPkt" json:"l2_rx_v6_data_path_punt_pkt,omitempty"`
	L2RxV6DataPathPuntPktDrop        *uint64  `protobuf:"varint,66,opt,name=l2_rx_v6_data_path_punt_pkt_drop,json=l2RxV6DataPathPuntPktDrop" json:"l2_rx_v6_data_path_punt_pkt_drop,omitempty"`
	L2TxPacketsCnt                   *uint64  `protobuf:"varint,67,opt,name=l2_tx_packets_cnt,json=l2TxPacketsCnt" json:"l2_tx_packets_cnt,omitempty"`
	L2TxMalformedCnt                 *uint64  `protobuf:"varint,68,opt,name=l2_tx_malformed_cnt,json=l2TxMalformedCnt" json:"l2_tx_malformed_cnt,omitempty"`
	L2TxNoIfdCnt                     *uint64  `protobuf:"varint,69,opt,name=l2_tx_no_ifd_cnt,json=l2TxNoIfdCnt" json:"l2_tx_no_ifd_cnt,omitempty"`
	L2TxIflInvalid                   *uint64  `protobuf:"varint,70,opt,name=l2_tx_ifl_invalid,json=l2TxIflInvalid" json:"l2_tx_ifl_invalid,omitempty"`
	L2BbeIoSendTxFailed              *uint64  `protobuf:"varint,71,opt,name=l2_bbe_io_send_tx_failed,json=l2BbeIoSendTxFailed" json:"l2_bbe_io_send_tx_failed,omitempty"`
	L2BbeIoSendTxFailedPartial       *uint64  `protobuf:"varint,72,opt,name=l2_bbe_io_send_tx_failed_partial,json=l2BbeIoSendTxFailedPartial" json:"l2_bbe_io_send_tx_failed_partial,omitempty"`
	L2TxV4OutErrorLocalIntf          *uint64  `protobuf:"varint,73,opt,name=l2_tx_v4_out_error_local_intf,json=l2TxV4OutErrorLocalIntf" json:"l2_tx_v4_out_error_local_intf,omitempty"`
	L2TxV6OutErrorLocalIntf          *uint64  `protobuf:"varint,74,opt,name=l2_tx_v6_out_error_local_intf,json=l2TxV6OutErrorLocalIntf" json:"l2_tx_v6_out_error_local_intf,omitempty"`
	L3RxPacketCnt                    *uint64  `protobuf:"varint,75,opt,name=l3_rx_packet_cnt,json=l3RxPacketCnt" json:"l3_rx_packet_cnt,omitempty"`
	L3RxUnsupportedProtocol          *uint64  `protobuf:"varint,76,opt,name=l3_rx_unsupported_protocol,json=l3RxUnsupportedProtocol" json:"l3_rx_unsupported_protocol,omitempty"`
	L3TxPacketCnt                    *uint64  `protobuf:"varint,77,opt,name=l3_tx_packet_cnt,json=l3TxPacketCnt" json:"l3_tx_packet_cnt,omitempty"`
	L3TxSendFailed                   *uint64  `protobuf:"varint,78,opt,name=l3_tx_send_failed,json=l3TxSendFailed" json:"l3_tx_send_failed,omitempty"`
	L3TxV4KernelForward              *uint64  `protobuf:"varint,79,opt,name=l3_tx_v4_kernel_forward,json=l3TxV4KernelForward" json:"l3_tx_v4_kernel_forward,omitempty"`
	L3TxV4KernelForwardDrops         *uint64  `protobuf:"varint,80,opt,name=l3_tx_v4_kernel_forward_drops,json=l3TxV4KernelForwardDrops" json:"l3_tx_v4_kernel_forward_drops,omitempty"`
	L3TxV6KernelForward              *uint64  `protobuf:"varint,81,opt,name=l3_tx_v6_kernel_forward,json=l3TxV6KernelForward" json:"l3_tx_v6_kernel_forward,omitempty"`
	L3TxV6KernelForwardDrops         *uint64  `protobuf:"varint,82,opt,name=l3_tx_v6_kernel_forward_drops,json=l3TxV6KernelForwardDrops" json:"l3_tx_v6_kernel_forward_drops,omitempty"`
	XXX_NoUnkeyedLiteral             struct{} `json:"-"`
	XXX_unrecognized                 []byte   `json:"-"`
	XXX_sizecache                    int32    `json:"-"`
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) Reset() {
	*m = JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType{}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) ProtoMessage() {}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcec3dee7e0b9012, []int{0, 0, 0, 0, 0, 0}
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType.Unmarshal(m, b)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType.Marshal(b, m, deterministic)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType.Merge(m, src)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) XXX_Size() int {
	return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType.Size(m)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType proto.InternalMessageInfo

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) GetL2RxPacketsCnt() uint64 {
	if m != nil && m.L2RxPacketsCnt != nil {
		return *m.L2RxPacketsCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) GetL2RxPacketsFailed() uint64 {
	if m != nil && m.L2RxPacketsFailed != nil {
		return *m.L2RxPacketsFailed
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) GetL2RxMalformedCnt() uint64 {
	if m != nil && m.L2RxMalformedCnt != nil {
		return *m.L2RxMalformedCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) GetL2RxIfdInvalid() uint64 {
	if m != nil && m.L2RxIfdInvalid != nil {
		return *m.L2RxIfdInvalid
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) GetL2RxIflInvalid() uint64 {
	if m != nil && m.L2RxIflInvalid != nil {
		return *m.L2RxIflInvalid
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) GetL2RxNoIffCnt() uint64 {
	if m != nil && m.L2RxNoIffCnt != nil {
		return *m.L2RxNoIffCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) GetL2RxIfCreateFailed() uint64 {
	if m != nil && m.L2RxIfCreateFailed != nil {
		return *m.L2RxIfCreateFailed
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) GetL2BbeIoRcvL3UnknownAddressFamily() uint64 {
	if m != nil && m.L2BbeIoRcvL3UnknownAddressFamily != nil {
		return *m.L2BbeIoRcvL3UnknownAddressFamily
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) GetL2RxUnsupportedInetProtocol() uint64 {
	if m != nil && m.L2RxUnsupportedInetProtocol != nil {
		return *m.L2RxUnsupportedInetProtocol
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) GetL2RxUnsupportedInet6Protocol() uint64 {
	if m != nil && m.L2RxUnsupportedInet6Protocol != nil {
		return *m.L2RxUnsupportedInet6Protocol
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) GetL2RxUnsupportedUdpProtocol() uint64 {
	if m != nil && m.L2RxUnsupportedUdpProtocol != nil {
		return *m.L2RxUnsupportedUdpProtocol
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) GetL2RxUnsupportedPuntAf() uint64 {
	if m != nil && m.L2RxUnsupportedPuntAf != nil {
		return *m.L2RxUnsupportedPuntAf
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) GetL2RxV4DataPathPuntPkt() uint64 {
	if m != nil && m.L2RxV4DataPathPuntPkt != nil {
		return *m.L2RxV4DataPathPuntPkt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) GetL2RxV4DataPathPuntPktDrop() uint64 {
	if m != nil && m.L2RxV4DataPathPuntPktDrop != nil {
		return *m.L2RxV4DataPathPuntPktDrop
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) GetL2RxV6DataPathPuntPkt() uint64 {
	if m != nil && m.L2RxV6DataPathPuntPkt != nil {
		return *m.L2RxV6DataPathPuntPkt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) GetL2RxV6DataPathPuntPktDrop() uint64 {
	if m != nil && m.L2RxV6DataPathPuntPktDrop != nil {
		return *m.L2RxV6DataPathPuntPktDrop
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) GetL2TxPacketsCnt() uint64 {
	if m != nil && m.L2TxPacketsCnt != nil {
		return *m.L2TxPacketsCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) GetL2TxMalformedCnt() uint64 {
	if m != nil && m.L2TxMalformedCnt != nil {
		return *m.L2TxMalformedCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) GetL2TxNoIfdCnt() uint64 {
	if m != nil && m.L2TxNoIfdCnt != nil {
		return *m.L2TxNoIfdCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) GetL2TxIflInvalid() uint64 {
	if m != nil && m.L2TxIflInvalid != nil {
		return *m.L2TxIflInvalid
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) GetL2BbeIoSendTxFailed() uint64 {
	if m != nil && m.L2BbeIoSendTxFailed != nil {
		return *m.L2BbeIoSendTxFailed
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) GetL2BbeIoSendTxFailedPartial() uint64 {
	if m != nil && m.L2BbeIoSendTxFailedPartial != nil {
		return *m.L2BbeIoSendTxFailedPartial
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) GetL2TxV4OutErrorLocalIntf() uint64 {
	if m != nil && m.L2TxV4OutErrorLocalIntf != nil {
		return *m.L2TxV4OutErrorLocalIntf
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) GetL2TxV6OutErrorLocalIntf() uint64 {
	if m != nil && m.L2TxV6OutErrorLocalIntf != nil {
		return *m.L2TxV6OutErrorLocalIntf
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) GetL3RxPacketCnt() uint64 {
	if m != nil && m.L3RxPacketCnt != nil {
		return *m.L3RxPacketCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) GetL3RxUnsupportedProtocol() uint64 {
	if m != nil && m.L3RxUnsupportedProtocol != nil {
		return *m.L3RxUnsupportedProtocol
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) GetL3TxPacketCnt() uint64 {
	if m != nil && m.L3TxPacketCnt != nil {
		return *m.L3TxPacketCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) GetL3TxSendFailed() uint64 {
	if m != nil && m.L3TxSendFailed != nil {
		return *m.L3TxSendFailed
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) GetL3TxV4KernelForward() uint64 {
	if m != nil && m.L3TxV4KernelForward != nil {
		return *m.L3TxV4KernelForward
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) GetL3TxV4KernelForwardDrops() uint64 {
	if m != nil && m.L3TxV4KernelForwardDrops != nil {
		return *m.L3TxV4KernelForwardDrops
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) GetL3TxV6KernelForward() uint64 {
	if m != nil && m.L3TxV6KernelForward != nil {
		return *m.L3TxV6KernelForward
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType) GetL3TxV6KernelForwardDrops() uint64 {
	if m != nil && m.L3TxV6KernelForwardDrops != nil {
		return *m.L3TxV6KernelForwardDrops
	}
	return 0
}

type JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType struct {
	RxPacketCnt          *uint64  `protobuf:"varint,51,opt,name=rx_packet_cnt,json=rxPacketCnt" json:"rx_packet_cnt,omitempty"`
	EraDrops             *uint64  `protobuf:"varint,52,opt,name=era_drops,json=eraDrops" json:"era_drops,omitempty"`
	RxNoConnection       *uint64  `protobuf:"varint,53,opt,name=rx_no_connection,json=rxNoConnection" json:"rx_no_connection,omitempty"`
	RxMalformedCnt       *uint64  `protobuf:"varint,54,opt,name=rx_malformed_cnt,json=rxMalformedCnt" json:"rx_malformed_cnt,omitempty"`
	RxNoIfCnt            *uint64  `protobuf:"varint,55,opt,name=rx_no_if_cnt,json=rxNoIfCnt" json:"rx_no_if_cnt,omitempty"`
	RxIflInvalid         *uint64  `protobuf:"varint,56,opt,name=rx_ifl_invalid,json=rxIflInvalid" json:"rx_ifl_invalid,omitempty"`
	RxSendFailed         *uint64  `protobuf:"varint,57,opt,name=rx_send_failed,json=rxSendFailed" json:"rx_send_failed,omitempty"`
	TxPacketCnt          *uint64  `protobuf:"varint,58,opt,name=tx_packet_cnt,json=txPacketCnt" json:"tx_packet_cnt,omitempty"`
	PacketsTransmitted   *uint64  `protobuf:"varint,59,opt,name=packets_transmitted,json=packetsTransmitted" json:"packets_transmitted,omitempty"`
	TxMalformedCnt       *uint64  `protobuf:"varint,60,opt,name=tx_malformed_cnt,json=txMalformedCnt" json:"tx_malformed_cnt,omitempty"`
	TxNullPkt            *uint64  `protobuf:"varint,61,opt,name=tx_null_pkt,json=txNullPkt" json:"tx_null_pkt,omitempty"`
	TxNoIfCnt            *uint64  `protobuf:"varint,62,opt,name=tx_no_if_cnt,json=txNoIfCnt" json:"tx_no_if_cnt,omitempty"`
	TxNoIffCnt           *uint64  `protobuf:"varint,63,opt,name=tx_no_iff_cnt,json=txNoIffCnt" json:"tx_no_iff_cnt,omitempty"`
	TxNoRttCnt           *uint64  `protobuf:"varint,64,opt,name=tx_no_rtt_cnt,json=txNoRttCnt" json:"tx_no_rtt_cnt,omitempty"`
	TxArpFailed          *uint64  `protobuf:"varint,65,opt,name=tx_arp_failed,json=txArpFailed" json:"tx_arp_failed,omitempty"`
	TxIfInvalid          *uint64  `protobuf:"varint,66,opt,name=tx_if_invalid,json=txIfInvalid" json:"tx_if_invalid,omitempty"`
	TxSendFailed         *uint64  `protobuf:"varint,67,opt,name=tx_send_failed,json=txSendFailed" json:"tx_send_failed,omitempty"`
	RxWhileNotConnected  *uint64  `protobuf:"varint,68,opt,name=rx_while_not_connected,json=rxWhileNotConnected" json:"rx_while_not_connected,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType) Reset() {
	*m = JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType{}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType) ProtoMessage() {
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcec3dee7e0b9012, []int{0, 0, 0, 0, 0, 1}
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType.Unmarshal(m, b)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType.Marshal(b, m, deterministic)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType.Merge(m, src)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType) XXX_Size() int {
	return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType.Size(m)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType proto.InternalMessageInfo

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType) GetRxPacketCnt() uint64 {
	if m != nil && m.RxPacketCnt != nil {
		return *m.RxPacketCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType) GetEraDrops() uint64 {
	if m != nil && m.EraDrops != nil {
		return *m.EraDrops
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType) GetRxNoConnection() uint64 {
	if m != nil && m.RxNoConnection != nil {
		return *m.RxNoConnection
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType) GetRxMalformedCnt() uint64 {
	if m != nil && m.RxMalformedCnt != nil {
		return *m.RxMalformedCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType) GetRxNoIfCnt() uint64 {
	if m != nil && m.RxNoIfCnt != nil {
		return *m.RxNoIfCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType) GetRxIflInvalid() uint64 {
	if m != nil && m.RxIflInvalid != nil {
		return *m.RxIflInvalid
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType) GetRxSendFailed() uint64 {
	if m != nil && m.RxSendFailed != nil {
		return *m.RxSendFailed
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType) GetTxPacketCnt() uint64 {
	if m != nil && m.TxPacketCnt != nil {
		return *m.TxPacketCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType) GetPacketsTransmitted() uint64 {
	if m != nil && m.PacketsTransmitted != nil {
		return *m.PacketsTransmitted
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType) GetTxMalformedCnt() uint64 {
	if m != nil && m.TxMalformedCnt != nil {
		return *m.TxMalformedCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType) GetTxNullPkt() uint64 {
	if m != nil && m.TxNullPkt != nil {
		return *m.TxNullPkt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType) GetTxNoIfCnt() uint64 {
	if m != nil && m.TxNoIfCnt != nil {
		return *m.TxNoIfCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType) GetTxNoIffCnt() uint64 {
	if m != nil && m.TxNoIffCnt != nil {
		return *m.TxNoIffCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType) GetTxNoRttCnt() uint64 {
	if m != nil && m.TxNoRttCnt != nil {
		return *m.TxNoRttCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType) GetTxArpFailed() uint64 {
	if m != nil && m.TxArpFailed != nil {
		return *m.TxArpFailed
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType) GetTxIfInvalid() uint64 {
	if m != nil && m.TxIfInvalid != nil {
		return *m.TxIfInvalid
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType) GetTxSendFailed() uint64 {
	if m != nil && m.TxSendFailed != nil {
		return *m.TxSendFailed
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType) GetRxWhileNotConnected() uint64 {
	if m != nil && m.RxWhileNotConnected != nil {
		return *m.RxWhileNotConnected
	}
	return 0
}

type JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType struct {
	RxNetworkPktCnt      *uint64  `protobuf:"varint,51,opt,name=rx_network_pkt_cnt,json=rxNetworkPktCnt" json:"rx_network_pkt_cnt,omitempty"`
	RxPluginPktCnt       *uint64  `protobuf:"varint,52,opt,name=rx_plugin_pkt_cnt,json=rxPluginPktCnt" json:"rx_plugin_pkt_cnt,omitempty"`
	RxLcpConfReqCnt      *uint64  `protobuf:"varint,53,opt,name=rx_lcp_conf_req_cnt,json=rxLcpConfReqCnt" json:"rx_lcp_conf_req_cnt,omitempty"`
	RxLcpConfAckCnt      *uint64  `protobuf:"varint,54,opt,name=rx_lcp_conf_ack_cnt,json=rxLcpConfAckCnt" json:"rx_lcp_conf_ack_cnt,omitempty"`
	RxLcpConfNackCnt     *uint64  `protobuf:"varint,55,opt,name=rx_lcp_conf_nack_cnt,json=rxLcpConfNackCnt" json:"rx_lcp_conf_nack_cnt,omitempty"`
	RxLcpConfRejCnt      *uint64  `protobuf:"varint,56,opt,name=rx_lcp_conf_rej_cnt,json=rxLcpConfRejCnt" json:"rx_lcp_conf_rej_cnt,omitempty"`
	RxLcpTermReqCnt      *uint64  `protobuf:"varint,57,opt,name=rx_lcp_term_req_cnt,json=rxLcpTermReqCnt" json:"rx_lcp_term_req_cnt,omitempty"`
	RxLcpTermAckCnt      *uint64  `protobuf:"varint,58,opt,name=rx_lcp_term_ack_cnt,json=rxLcpTermAckCnt" json:"rx_lcp_term_ack_cnt,omitempty"`
	RxLcpCodeRejCnt      *uint64  `protobuf:"varint,59,opt,name=rx_lcp_code_rej_cnt,json=rxLcpCodeRejCnt" json:"rx_lcp_code_rej_cnt,omitempty"`
	RxLcpProtocolRejCnt  *uint64  `protobuf:"varint,60,opt,name=rx_lcp_protocol_rej_cnt,json=rxLcpProtocolRejCnt" json:"rx_lcp_protocol_rej_cnt,omitempty"`
	RxLcpEchoReqCnt      *uint64  `protobuf:"varint,61,opt,name=rx_lcp_echo_req_cnt,json=rxLcpEchoReqCnt" json:"rx_lcp_echo_req_cnt,omitempty"`
	RxLcpEchoReplyCnt    *uint64  `protobuf:"varint,62,opt,name=rx_lcp_echo_reply_cnt,json=rxLcpEchoReplyCnt" json:"rx_lcp_echo_reply_cnt,omitempty"`
	RxLcpDiscardReqCnt   *uint64  `protobuf:"varint,63,opt,name=rx_lcp_discard_req_cnt,json=rxLcpDiscardReqCnt" json:"rx_lcp_discard_req_cnt,omitempty"`
	RxPapReqCnt          *uint64  `protobuf:"varint,64,opt,name=rx_pap_req_cnt,json=rxPapReqCnt" json:"rx_pap_req_cnt,omitempty"`
	RxPapAckCnt          *uint64  `protobuf:"varint,65,opt,name=rx_pap_ack_cnt,json=rxPapAckCnt" json:"rx_pap_ack_cnt,omitempty"`
	RxPapNackCnt         *uint64  `protobuf:"varint,66,opt,name=rx_pap_nack_cnt,json=rxPapNackCnt" json:"rx_pap_nack_cnt,omitempty"`
	RxChapChallengeCnt   *uint64  `protobuf:"varint,67,opt,name=rx_chap_challenge_cnt,json=rxChapChallengeCnt" json:"rx_chap_challenge_cnt,omitempty"`
	RxChapRespCnt        *uint64  `protobuf:"varint,68,opt,name=rx_chap_resp_cnt,json=rxChapRespCnt" json:"rx_chap_resp_cnt,omitempty"`
	RxChapSuccessCnt     *uint64  `protobuf:"varint,69,opt,name=rx_chap_success_cnt,json=rxChapSuccessCnt" json:"rx_chap_success_cnt,omitempty"`
	RxChapFailureCnt     *uint64  `protobuf:"varint,70,opt,name=rx_chap_failure_cnt,json=rxChapFailureCnt" json:"rx_chap_failure_cnt,omitempty"`
	RxIpcpReqCnt         *uint64  `protobuf:"varint,71,opt,name=rx_ipcp_req_cnt,json=rxIpcpReqCnt" json:"rx_ipcp_req_cnt,omitempty"`
	RxIpcpAckCnt         *uint64  `protobuf:"varint,72,opt,name=rx_ipcp_ack_cnt,json=rxIpcpAckCnt" json:"rx_ipcp_ack_cnt,omitempty"`
	RxIpcpNackCnt        *uint64  `protobuf:"varint,73,opt,name=rx_ipcp_nack_cnt,json=rxIpcpNackCnt" json:"rx_ipcp_nack_cnt,omitempty"`
	RxIpv6CpReqCnt       *uint64  `protobuf:"varint,74,opt,name=rx_ipv6cp_req_cnt,json=rxIpv6cpReqCnt" json:"rx_ipv6cp_req_cnt,omitempty"`
	RxIpv6CpAckCnt       *uint64  `protobuf:"varint,75,opt,name=rx_ipv6cp_ack_cnt,json=rxIpv6cpAckCnt" json:"rx_ipv6cp_ack_cnt,omitempty"`
	RxIpv6CpNackCnt      *uint64  `protobuf:"varint,76,opt,name=rx_ipv6cp_nack_cnt,json=rxIpv6cpNackCnt" json:"rx_ipv6cp_nack_cnt,omitempty"`
	RxMalformedCnt       *uint64  `protobuf:"varint,77,opt,name=rx_malformed_cnt,json=rxMalformedCnt" json:"rx_malformed_cnt,omitempty"`
	RxNoIfCnt            *uint64  `protobuf:"varint,78,opt,name=rx_no_if_cnt,json=rxNoIfCnt" json:"rx_no_if_cnt,omitempty"`
	RxUnsupported        *uint64  `protobuf:"varint,79,opt,name=rx_unsupported,json=rxUnsupported" json:"rx_unsupported,omitempty"`
	TxCnt                *uint64  `protobuf:"varint,80,opt,name=tx_cnt,json=txCnt" json:"tx_cnt,omitempty"`
	TxLcpConfReqCnt      *uint64  `protobuf:"varint,81,opt,name=tx_lcp_conf_req_cnt,json=txLcpConfReqCnt" json:"tx_lcp_conf_req_cnt,omitempty"`
	TxLcpConfAckCnt      *uint64  `protobuf:"varint,82,opt,name=tx_lcp_conf_ack_cnt,json=txLcpConfAckCnt" json:"tx_lcp_conf_ack_cnt,omitempty"`
	TxLcpConfNackCnt     *uint64  `protobuf:"varint,83,opt,name=tx_lcp_conf_nack_cnt,json=txLcpConfNackCnt" json:"tx_lcp_conf_nack_cnt,omitempty"`
	TxLcpConfRejCnt      *uint64  `protobuf:"varint,84,opt,name=tx_lcp_conf_rej_cnt,json=txLcpConfRejCnt" json:"tx_lcp_conf_rej_cnt,omitempty"`
	TxLcpEchoReqCnt      *uint64  `protobuf:"varint,85,opt,name=tx_lcp_echo_req_cnt,json=txLcpEchoReqCnt" json:"tx_lcp_echo_req_cnt,omitempty"`
	TxLcpEchoReplyCnt    *uint64  `protobuf:"varint,86,opt,name=tx_lcp_echo_reply_cnt,json=txLcpEchoReplyCnt" json:"tx_lcp_echo_reply_cnt,omitempty"`
	TxLcpDiscardReqCnt   *uint64  `protobuf:"varint,87,opt,name=tx_lcp_discard_req_cnt,json=txLcpDiscardReqCnt" json:"tx_lcp_discard_req_cnt,omitempty"`
	TxLcpTermReqCnt      *uint64  `protobuf:"varint,88,opt,name=tx_lcp_term_req_cnt,json=txLcpTermReqCnt" json:"tx_lcp_term_req_cnt,omitempty"`
	TxLcpTermAckCnt      *uint64  `protobuf:"varint,89,opt,name=tx_lcp_term_ack_cnt,json=txLcpTermAckCnt" json:"tx_lcp_term_ack_cnt,omitempty"`
	TxPapReqCnt          *uint64  `protobuf:"varint,90,opt,name=tx_pap_req_cnt,json=txPapReqCnt" json:"tx_pap_req_cnt,omitempty"`
	TxPapAckCnt          *uint64  `protobuf:"varint,91,opt,name=tx_pap_ack_cnt,json=txPapAckCnt" json:"tx_pap_ack_cnt,omitempty"`
	TxPapNackCnt         *uint64  `protobuf:"varint,92,opt,name=tx_pap_nack_cnt,json=txPapNackCnt" json:"tx_pap_nack_cnt,omitempty"`
	TxChapChallengeCnt   *uint64  `protobuf:"varint,93,opt,name=tx_chap_challenge_cnt,json=txChapChallengeCnt" json:"tx_chap_challenge_cnt,omitempty"`
	TxChapRespCnt        *uint64  `protobuf:"varint,94,opt,name=tx_chap_resp_cnt,json=txChapRespCnt" json:"tx_chap_resp_cnt,omitempty"`
	TxChapSuccessCnt     *uint64  `protobuf:"varint,95,opt,name=tx_chap_success_cnt,json=txChapSuccessCnt" json:"tx_chap_success_cnt,omitempty"`
	TxChapFailureCnt     *uint64  `protobuf:"varint,96,opt,name=tx_chap_failure_cnt,json=txChapFailureCnt" json:"tx_chap_failure_cnt,omitempty"`
	TxIpcpReqCnt         *uint64  `protobuf:"varint,97,opt,name=tx_ipcp_req_cnt,json=txIpcpReqCnt" json:"tx_ipcp_req_cnt,omitempty"`
	TxIpcpAckCnt         *uint64  `protobuf:"varint,98,opt,name=tx_ipcp_ack_cnt,json=txIpcpAckCnt" json:"tx_ipcp_ack_cnt,omitempty"`
	TxIpcpNackCnt        *uint64  `protobuf:"varint,99,opt,name=tx_ipcp_nack_cnt,json=txIpcpNackCnt" json:"tx_ipcp_nack_cnt,omitempty"`
	TxIpv6CpReqCnt       *uint64  `protobuf:"varint,100,opt,name=tx_ipv6cp_req_cnt,json=txIpv6cpReqCnt" json:"tx_ipv6cp_req_cnt,omitempty"`
	TxIpv6CpAckCnt       *uint64  `protobuf:"varint,101,opt,name=tx_ipv6cp_ack_cnt,json=txIpv6cpAckCnt" json:"tx_ipv6cp_ack_cnt,omitempty"`
	TxIpv6CpNackCnt      *uint64  `protobuf:"varint,102,opt,name=tx_ipv6cp_nack_cnt,json=txIpv6cpNackCnt" json:"tx_ipv6cp_nack_cnt,omitempty"`
	TxUnknownPktCnt      *uint64  `protobuf:"varint,103,opt,name=tx_unknown_pkt_cnt,json=txUnknownPktCnt" json:"tx_unknown_pkt_cnt,omitempty"`
	TxSendFailed         *uint64  `protobuf:"varint,104,opt,name=tx_send_failed,json=txSendFailed" json:"tx_send_failed,omitempty"`
	TxMalformedCnt       *uint64  `protobuf:"varint,105,opt,name=tx_malformed_cnt,json=txMalformedCnt" json:"tx_malformed_cnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) Reset() {
	*m = JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType{}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) ProtoMessage() {
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcec3dee7e0b9012, []int{0, 0, 0, 0, 0, 2}
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType.Unmarshal(m, b)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType.Marshal(b, m, deterministic)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType.Merge(m, src)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) XXX_Size() int {
	return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType.Size(m)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType proto.InternalMessageInfo

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetRxNetworkPktCnt() uint64 {
	if m != nil && m.RxNetworkPktCnt != nil {
		return *m.RxNetworkPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetRxPluginPktCnt() uint64 {
	if m != nil && m.RxPluginPktCnt != nil {
		return *m.RxPluginPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetRxLcpConfReqCnt() uint64 {
	if m != nil && m.RxLcpConfReqCnt != nil {
		return *m.RxLcpConfReqCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetRxLcpConfAckCnt() uint64 {
	if m != nil && m.RxLcpConfAckCnt != nil {
		return *m.RxLcpConfAckCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetRxLcpConfNackCnt() uint64 {
	if m != nil && m.RxLcpConfNackCnt != nil {
		return *m.RxLcpConfNackCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetRxLcpConfRejCnt() uint64 {
	if m != nil && m.RxLcpConfRejCnt != nil {
		return *m.RxLcpConfRejCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetRxLcpTermReqCnt() uint64 {
	if m != nil && m.RxLcpTermReqCnt != nil {
		return *m.RxLcpTermReqCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetRxLcpTermAckCnt() uint64 {
	if m != nil && m.RxLcpTermAckCnt != nil {
		return *m.RxLcpTermAckCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetRxLcpCodeRejCnt() uint64 {
	if m != nil && m.RxLcpCodeRejCnt != nil {
		return *m.RxLcpCodeRejCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetRxLcpProtocolRejCnt() uint64 {
	if m != nil && m.RxLcpProtocolRejCnt != nil {
		return *m.RxLcpProtocolRejCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetRxLcpEchoReqCnt() uint64 {
	if m != nil && m.RxLcpEchoReqCnt != nil {
		return *m.RxLcpEchoReqCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetRxLcpEchoReplyCnt() uint64 {
	if m != nil && m.RxLcpEchoReplyCnt != nil {
		return *m.RxLcpEchoReplyCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetRxLcpDiscardReqCnt() uint64 {
	if m != nil && m.RxLcpDiscardReqCnt != nil {
		return *m.RxLcpDiscardReqCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetRxPapReqCnt() uint64 {
	if m != nil && m.RxPapReqCnt != nil {
		return *m.RxPapReqCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetRxPapAckCnt() uint64 {
	if m != nil && m.RxPapAckCnt != nil {
		return *m.RxPapAckCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetRxPapNackCnt() uint64 {
	if m != nil && m.RxPapNackCnt != nil {
		return *m.RxPapNackCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetRxChapChallengeCnt() uint64 {
	if m != nil && m.RxChapChallengeCnt != nil {
		return *m.RxChapChallengeCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetRxChapRespCnt() uint64 {
	if m != nil && m.RxChapRespCnt != nil {
		return *m.RxChapRespCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetRxChapSuccessCnt() uint64 {
	if m != nil && m.RxChapSuccessCnt != nil {
		return *m.RxChapSuccessCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetRxChapFailureCnt() uint64 {
	if m != nil && m.RxChapFailureCnt != nil {
		return *m.RxChapFailureCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetRxIpcpReqCnt() uint64 {
	if m != nil && m.RxIpcpReqCnt != nil {
		return *m.RxIpcpReqCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetRxIpcpAckCnt() uint64 {
	if m != nil && m.RxIpcpAckCnt != nil {
		return *m.RxIpcpAckCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetRxIpcpNackCnt() uint64 {
	if m != nil && m.RxIpcpNackCnt != nil {
		return *m.RxIpcpNackCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetRxIpv6CpReqCnt() uint64 {
	if m != nil && m.RxIpv6CpReqCnt != nil {
		return *m.RxIpv6CpReqCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetRxIpv6CpAckCnt() uint64 {
	if m != nil && m.RxIpv6CpAckCnt != nil {
		return *m.RxIpv6CpAckCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetRxIpv6CpNackCnt() uint64 {
	if m != nil && m.RxIpv6CpNackCnt != nil {
		return *m.RxIpv6CpNackCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetRxMalformedCnt() uint64 {
	if m != nil && m.RxMalformedCnt != nil {
		return *m.RxMalformedCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetRxNoIfCnt() uint64 {
	if m != nil && m.RxNoIfCnt != nil {
		return *m.RxNoIfCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetRxUnsupported() uint64 {
	if m != nil && m.RxUnsupported != nil {
		return *m.RxUnsupported
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetTxCnt() uint64 {
	if m != nil && m.TxCnt != nil {
		return *m.TxCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetTxLcpConfReqCnt() uint64 {
	if m != nil && m.TxLcpConfReqCnt != nil {
		return *m.TxLcpConfReqCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetTxLcpConfAckCnt() uint64 {
	if m != nil && m.TxLcpConfAckCnt != nil {
		return *m.TxLcpConfAckCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetTxLcpConfNackCnt() uint64 {
	if m != nil && m.TxLcpConfNackCnt != nil {
		return *m.TxLcpConfNackCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetTxLcpConfRejCnt() uint64 {
	if m != nil && m.TxLcpConfRejCnt != nil {
		return *m.TxLcpConfRejCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetTxLcpEchoReqCnt() uint64 {
	if m != nil && m.TxLcpEchoReqCnt != nil {
		return *m.TxLcpEchoReqCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetTxLcpEchoReplyCnt() uint64 {
	if m != nil && m.TxLcpEchoReplyCnt != nil {
		return *m.TxLcpEchoReplyCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetTxLcpDiscardReqCnt() uint64 {
	if m != nil && m.TxLcpDiscardReqCnt != nil {
		return *m.TxLcpDiscardReqCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetTxLcpTermReqCnt() uint64 {
	if m != nil && m.TxLcpTermReqCnt != nil {
		return *m.TxLcpTermReqCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetTxLcpTermAckCnt() uint64 {
	if m != nil && m.TxLcpTermAckCnt != nil {
		return *m.TxLcpTermAckCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetTxPapReqCnt() uint64 {
	if m != nil && m.TxPapReqCnt != nil {
		return *m.TxPapReqCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetTxPapAckCnt() uint64 {
	if m != nil && m.TxPapAckCnt != nil {
		return *m.TxPapAckCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetTxPapNackCnt() uint64 {
	if m != nil && m.TxPapNackCnt != nil {
		return *m.TxPapNackCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetTxChapChallengeCnt() uint64 {
	if m != nil && m.TxChapChallengeCnt != nil {
		return *m.TxChapChallengeCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetTxChapRespCnt() uint64 {
	if m != nil && m.TxChapRespCnt != nil {
		return *m.TxChapRespCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetTxChapSuccessCnt() uint64 {
	if m != nil && m.TxChapSuccessCnt != nil {
		return *m.TxChapSuccessCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetTxChapFailureCnt() uint64 {
	if m != nil && m.TxChapFailureCnt != nil {
		return *m.TxChapFailureCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetTxIpcpReqCnt() uint64 {
	if m != nil && m.TxIpcpReqCnt != nil {
		return *m.TxIpcpReqCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetTxIpcpAckCnt() uint64 {
	if m != nil && m.TxIpcpAckCnt != nil {
		return *m.TxIpcpAckCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetTxIpcpNackCnt() uint64 {
	if m != nil && m.TxIpcpNackCnt != nil {
		return *m.TxIpcpNackCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetTxIpv6CpReqCnt() uint64 {
	if m != nil && m.TxIpv6CpReqCnt != nil {
		return *m.TxIpv6CpReqCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetTxIpv6CpAckCnt() uint64 {
	if m != nil && m.TxIpv6CpAckCnt != nil {
		return *m.TxIpv6CpAckCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetTxIpv6CpNackCnt() uint64 {
	if m != nil && m.TxIpv6CpNackCnt != nil {
		return *m.TxIpv6CpNackCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetTxUnknownPktCnt() uint64 {
	if m != nil && m.TxUnknownPktCnt != nil {
		return *m.TxUnknownPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetTxSendFailed() uint64 {
	if m != nil && m.TxSendFailed != nil {
		return *m.TxSendFailed
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType) GetTxMalformedCnt() uint64 {
	if m != nil && m.TxMalformedCnt != nil {
		return *m.TxMalformedCnt
	}
	return 0
}

type JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppoeType struct {
	RxCnt                *uint64  `protobuf:"varint,51,opt,name=rx_cnt,json=rxCnt" json:"rx_cnt,omitempty"`
	RxPadiCnt            *uint64  `protobuf:"varint,52,opt,name=rx_padi_cnt,json=rxPadiCnt" json:"rx_padi_cnt,omitempty"`
	RxPadrCnt            *uint64  `protobuf:"varint,53,opt,name=rx_padr_cnt,json=rxPadrCnt" json:"rx_padr_cnt,omitempty"`
	RxPppCnt             *uint64  `protobuf:"varint,54,opt,name=rx_ppp_cnt,json=rxPppCnt" json:"rx_ppp_cnt,omitempty"`
	RxMalformedCnt       *uint64  `protobuf:"varint,55,opt,name=rx_malformed_cnt,json=rxMalformedCnt" json:"rx_malformed_cnt,omitempty"`
	RxNoIfCnt            *uint64  `protobuf:"varint,56,opt,name=rx_no_if_cnt,json=rxNoIfCnt" json:"rx_no_if_cnt,omitempty"`
	RxUnsupported        *uint64  `protobuf:"varint,57,opt,name=rx_unsupported,json=rxUnsupported" json:"rx_unsupported,omitempty"`
	RxPadiEraDiscards    *uint64  `protobuf:"varint,58,opt,name=rx_padi_era_discards,json=rxPadiEraDiscards" json:"rx_padi_era_discards,omitempty"`
	TxCnt                *uint64  `protobuf:"varint,59,opt,name=tx_cnt,json=txCnt" json:"tx_cnt,omitempty"`
	TxSendFailed         *uint64  `protobuf:"varint,60,opt,name=tx_send_failed,json=txSendFailed" json:"tx_send_failed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppoeType) Reset() {
	*m = JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppoeType{}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppoeType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppoeType) ProtoMessage() {
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppoeType) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcec3dee7e0b9012, []int{0, 0, 0, 0, 0, 3}
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppoeType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppoeType.Unmarshal(m, b)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppoeType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppoeType.Marshal(b, m, deterministic)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppoeType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppoeType.Merge(m, src)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppoeType) XXX_Size() int {
	return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppoeType.Size(m)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppoeType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppoeType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppoeType proto.InternalMessageInfo

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppoeType) GetRxCnt() uint64 {
	if m != nil && m.RxCnt != nil {
		return *m.RxCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppoeType) GetRxPadiCnt() uint64 {
	if m != nil && m.RxPadiCnt != nil {
		return *m.RxPadiCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppoeType) GetRxPadrCnt() uint64 {
	if m != nil && m.RxPadrCnt != nil {
		return *m.RxPadrCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppoeType) GetRxPppCnt() uint64 {
	if m != nil && m.RxPppCnt != nil {
		return *m.RxPppCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppoeType) GetRxMalformedCnt() uint64 {
	if m != nil && m.RxMalformedCnt != nil {
		return *m.RxMalformedCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppoeType) GetRxNoIfCnt() uint64 {
	if m != nil && m.RxNoIfCnt != nil {
		return *m.RxNoIfCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppoeType) GetRxUnsupported() uint64 {
	if m != nil && m.RxUnsupported != nil {
		return *m.RxUnsupported
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppoeType) GetRxPadiEraDiscards() uint64 {
	if m != nil && m.RxPadiEraDiscards != nil {
		return *m.RxPadiEraDiscards
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppoeType) GetTxCnt() uint64 {
	if m != nil && m.TxCnt != nil {
		return *m.TxCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppoeType) GetTxSendFailed() uint64 {
	if m != nil && m.TxSendFailed != nil {
		return *m.TxSendFailed
	}
	return 0
}

type JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType struct {
	RxCnt                   *uint64  `protobuf:"varint,51,opt,name=rx_cnt,json=rxCnt" json:"rx_cnt,omitempty"`
	RxPktCnt                *uint64  `protobuf:"varint,52,opt,name=rx_pkt_cnt,json=rxPktCnt" json:"rx_pkt_cnt,omitempty"`
	PppRxPktCnt             *uint64  `protobuf:"varint,53,opt,name=ppp_rx_pkt_cnt,json=pppRxPktCnt" json:"ppp_rx_pkt_cnt,omitempty"`
	TxPktCnt                *uint64  `protobuf:"varint,54,opt,name=tx_pkt_cnt,json=txPktCnt" json:"tx_pkt_cnt,omitempty"`
	PppRxLcpConfReqCount    *uint64  `protobuf:"varint,55,opt,name=ppp_rx_lcp_conf_req_count,json=pppRxLcpConfReqCount" json:"ppp_rx_lcp_conf_req_count,omitempty"`
	PppRxLcpConfAckCount    *uint64  `protobuf:"varint,56,opt,name=ppp_rx_lcp_conf_ack_count,json=pppRxLcpConfAckCount" json:"ppp_rx_lcp_conf_ack_count,omitempty"`
	PppRxLcpConfNackCount   *uint64  `protobuf:"varint,57,opt,name=ppp_rx_lcp_conf_nack_count,json=pppRxLcpConfNackCount" json:"ppp_rx_lcp_conf_nack_count,omitempty"`
	PppRxLcpTermReqCount    *uint64  `protobuf:"varint,58,opt,name=ppp_rx_lcp_term_req_count,json=pppRxLcpTermReqCount" json:"ppp_rx_lcp_term_req_count,omitempty"`
	PppRxLcpTermAckCount    *uint64  `protobuf:"varint,59,opt,name=ppp_rx_lcp_term_ack_count,json=pppRxLcpTermAckCount" json:"ppp_rx_lcp_term_ack_count,omitempty"`
	PppRxLcpEchoReqCount    *uint64  `protobuf:"varint,60,opt,name=ppp_rx_lcp_echo_req_count,json=pppRxLcpEchoReqCount" json:"ppp_rx_lcp_echo_req_count,omitempty"`
	PppRxLcpEchoRespCount   *uint64  `protobuf:"varint,61,opt,name=ppp_rx_lcp_echo_resp_count,json=pppRxLcpEchoRespCount" json:"ppp_rx_lcp_echo_resp_count,omitempty"`
	PppRxPapReqCount        *uint64  `protobuf:"varint,62,opt,name=ppp_rx_pap_req_count,json=pppRxPapReqCount" json:"ppp_rx_pap_req_count,omitempty"`
	PppRxPapAckCount        *uint64  `protobuf:"varint,63,opt,name=ppp_rx_pap_ack_count,json=pppRxPapAckCount" json:"ppp_rx_pap_ack_count,omitempty"`
	PppRxPapNackCount       *uint64  `protobuf:"varint,64,opt,name=ppp_rx_pap_nack_count,json=pppRxPapNackCount" json:"ppp_rx_pap_nack_count,omitempty"`
	PppRxChapChallengeCount *uint64  `protobuf:"varint,65,opt,name=ppp_rx_chap_challenge_count,json=pppRxChapChallengeCount" json:"ppp_rx_chap_challenge_count,omitempty"`
	PppRxChapRespCount      *uint64  `protobuf:"varint,66,opt,name=ppp_rx_chap_resp_count,json=pppRxChapRespCount" json:"ppp_rx_chap_resp_count,omitempty"`
	PppRxChapSuccessCount   *uint64  `protobuf:"varint,67,opt,name=ppp_rx_chap_success_count,json=pppRxChapSuccessCount" json:"ppp_rx_chap_success_count,omitempty"`
	PppRxChapFailCount      *uint64  `protobuf:"varint,68,opt,name=ppp_rx_chap_fail_count,json=pppRxChapFailCount" json:"ppp_rx_chap_fail_count,omitempty"`
	PppRxIpcpConfReqCount   *uint64  `protobuf:"varint,69,opt,name=ppp_rx_ipcp_conf_req_count,json=pppRxIpcpConfReqCount" json:"ppp_rx_ipcp_conf_req_count,omitempty"`
	PppRxIpcpConfAckCount   *uint64  `protobuf:"varint,70,opt,name=ppp_rx_ipcp_conf_ack_count,json=pppRxIpcpConfAckCount" json:"ppp_rx_ipcp_conf_ack_count,omitempty"`
	PppRxIpcpConfNackCount  *uint64  `protobuf:"varint,71,opt,name=ppp_rx_ipcp_conf_nack_count,json=pppRxIpcpConfNackCount" json:"ppp_rx_ipcp_conf_nack_count,omitempty"`
	RxMalformedCnt          *uint64  `protobuf:"varint,72,opt,name=rx_malformed_cnt,json=rxMalformedCnt" json:"rx_malformed_cnt,omitempty"`
	PppRxUnknownProtocol    *uint64  `protobuf:"varint,73,opt,name=ppp_rx_unknown_protocol,json=pppRxUnknownProtocol" json:"ppp_rx_unknown_protocol,omitempty"`
	RxMsgCnt                *uint64  `protobuf:"varint,74,opt,name=rx_msg_cnt,json=rxMsgCnt" json:"rx_msg_cnt,omitempty"`
	RxMsgProcessdCnt        *uint64  `protobuf:"varint,75,opt,name=rx_msg_processd_cnt,json=rxMsgProcessdCnt" json:"rx_msg_processd_cnt,omitempty"`
	RxMsgErr                *uint64  `protobuf:"varint,76,opt,name=rx_msg_err,json=rxMsgErr" json:"rx_msg_err,omitempty"`
	RxInvalidMsgCnt         *uint64  `protobuf:"varint,77,opt,name=rx_invalid_msg_cnt,json=rxInvalidMsgCnt" json:"rx_invalid_msg_cnt,omitempty"`
	TxCnt                   *uint64  `protobuf:"varint,78,opt,name=tx_cnt,json=txCnt" json:"tx_cnt,omitempty"`
	PppTxLcpConfReqCount    *uint64  `protobuf:"varint,79,opt,name=ppp_tx_lcp_conf_req_count,json=pppTxLcpConfReqCount" json:"ppp_tx_lcp_conf_req_count,omitempty"`
	PppTxLcpConfAckCount    *uint64  `protobuf:"varint,80,opt,name=ppp_tx_lcp_conf_ack_count,json=pppTxLcpConfAckCount" json:"ppp_tx_lcp_conf_ack_count,omitempty"`
	PppTxLcpConfNackCount   *uint64  `protobuf:"varint,81,opt,name=ppp_tx_lcp_conf_nack_count,json=pppTxLcpConfNackCount" json:"ppp_tx_lcp_conf_nack_count,omitempty"`
	PppTxLcpEchoReqCount    *uint64  `protobuf:"varint,82,opt,name=ppp_tx_lcp_echo_req_count,json=pppTxLcpEchoReqCount" json:"ppp_tx_lcp_echo_req_count,omitempty"`
	PppTxLcpEchoRespCount   *uint64  `protobuf:"varint,83,opt,name=ppp_tx_lcp_echo_resp_count,json=pppTxLcpEchoRespCount" json:"ppp_tx_lcp_echo_resp_count,omitempty"`
	PppTxLcpTermReqCount    *uint64  `protobuf:"varint,84,opt,name=ppp_tx_lcp_term_req_count,json=pppTxLcpTermReqCount" json:"ppp_tx_lcp_term_req_count,omitempty"`
	PppTxLcpTermAckCount    *uint64  `protobuf:"varint,85,opt,name=ppp_tx_lcp_term_ack_count,json=pppTxLcpTermAckCount" json:"ppp_tx_lcp_term_ack_count,omitempty"`
	PppTxPapReqCount        *uint64  `protobuf:"varint,86,opt,name=ppp_tx_pap_req_count,json=pppTxPapReqCount" json:"ppp_tx_pap_req_count,omitempty"`
	PppTxPapAckCount        *uint64  `protobuf:"varint,87,opt,name=ppp_tx_pap_ack_count,json=pppTxPapAckCount" json:"ppp_tx_pap_ack_count,omitempty"`
	PppTxPapNackCount       *uint64  `protobuf:"varint,88,opt,name=ppp_tx_pap_nack_count,json=pppTxPapNackCount" json:"ppp_tx_pap_nack_count,omitempty"`
	PppTxChapChallengeCount *uint64  `protobuf:"varint,89,opt,name=ppp_tx_chap_challenge_count,json=pppTxChapChallengeCount" json:"ppp_tx_chap_challenge_count,omitempty"`
	PppTxChapRespCount      *uint64  `protobuf:"varint,90,opt,name=ppp_tx_chap_resp_count,json=pppTxChapRespCount" json:"ppp_tx_chap_resp_count,omitempty"`
	PppTxChapSuccessCount   *uint64  `protobuf:"varint,91,opt,name=ppp_tx_chap_success_count,json=pppTxChapSuccessCount" json:"ppp_tx_chap_success_count,omitempty"`
	PppTxChapFailCount      *uint64  `protobuf:"varint,92,opt,name=ppp_tx_chap_fail_count,json=pppTxChapFailCount" json:"ppp_tx_chap_fail_count,omitempty"`
	PppTxIpcpConfReqCount   *uint64  `protobuf:"varint,93,opt,name=ppp_tx_ipcp_conf_req_count,json=pppTxIpcpConfReqCount" json:"ppp_tx_ipcp_conf_req_count,omitempty"`
	PppTxIpcpConfAckCount   *uint64  `protobuf:"varint,94,opt,name=ppp_tx_ipcp_conf_ack_count,json=pppTxIpcpConfAckCount" json:"ppp_tx_ipcp_conf_ack_count,omitempty"`
	PppTxIpcpConfNackCount  *uint64  `protobuf:"varint,95,opt,name=ppp_tx_ipcp_conf_nack_count,json=pppTxIpcpConfNackCount" json:"ppp_tx_ipcp_conf_nack_count,omitempty"`
	PppTxUnknownProtocol    *uint64  `protobuf:"varint,96,opt,name=ppp_tx_unknown_protocol,json=pppTxUnknownProtocol" json:"ppp_tx_unknown_protocol,omitempty"`
	TxPktSendFailed         *uint64  `protobuf:"varint,97,opt,name=tx_pkt_send_failed,json=txPktSendFailed" json:"tx_pkt_send_failed,omitempty"`
	TxPktErr                *uint64  `protobuf:"varint,98,opt,name=tx_pkt_err,json=txPktErr" json:"tx_pkt_err,omitempty"`
	TxMsgCnt                *uint64  `protobuf:"varint,99,opt,name=tx_msg_cnt,json=txMsgCnt" json:"tx_msg_cnt,omitempty"`
	TxMsgErr                *uint64  `protobuf:"varint,100,opt,name=tx_msg_err,json=txMsgErr" json:"tx_msg_err,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) Reset() {
	*m = JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType{}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) ProtoMessage() {
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcec3dee7e0b9012, []int{0, 0, 0, 0, 0, 4}
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType.Unmarshal(m, b)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType.Marshal(b, m, deterministic)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType.Merge(m, src)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) XXX_Size() int {
	return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType.Size(m)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType proto.InternalMessageInfo

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetRxCnt() uint64 {
	if m != nil && m.RxCnt != nil {
		return *m.RxCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetRxPktCnt() uint64 {
	if m != nil && m.RxPktCnt != nil {
		return *m.RxPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppRxPktCnt() uint64 {
	if m != nil && m.PppRxPktCnt != nil {
		return *m.PppRxPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetTxPktCnt() uint64 {
	if m != nil && m.TxPktCnt != nil {
		return *m.TxPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppRxLcpConfReqCount() uint64 {
	if m != nil && m.PppRxLcpConfReqCount != nil {
		return *m.PppRxLcpConfReqCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppRxLcpConfAckCount() uint64 {
	if m != nil && m.PppRxLcpConfAckCount != nil {
		return *m.PppRxLcpConfAckCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppRxLcpConfNackCount() uint64 {
	if m != nil && m.PppRxLcpConfNackCount != nil {
		return *m.PppRxLcpConfNackCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppRxLcpTermReqCount() uint64 {
	if m != nil && m.PppRxLcpTermReqCount != nil {
		return *m.PppRxLcpTermReqCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppRxLcpTermAckCount() uint64 {
	if m != nil && m.PppRxLcpTermAckCount != nil {
		return *m.PppRxLcpTermAckCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppRxLcpEchoReqCount() uint64 {
	if m != nil && m.PppRxLcpEchoReqCount != nil {
		return *m.PppRxLcpEchoReqCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppRxLcpEchoRespCount() uint64 {
	if m != nil && m.PppRxLcpEchoRespCount != nil {
		return *m.PppRxLcpEchoRespCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppRxPapReqCount() uint64 {
	if m != nil && m.PppRxPapReqCount != nil {
		return *m.PppRxPapReqCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppRxPapAckCount() uint64 {
	if m != nil && m.PppRxPapAckCount != nil {
		return *m.PppRxPapAckCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppRxPapNackCount() uint64 {
	if m != nil && m.PppRxPapNackCount != nil {
		return *m.PppRxPapNackCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppRxChapChallengeCount() uint64 {
	if m != nil && m.PppRxChapChallengeCount != nil {
		return *m.PppRxChapChallengeCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppRxChapRespCount() uint64 {
	if m != nil && m.PppRxChapRespCount != nil {
		return *m.PppRxChapRespCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppRxChapSuccessCount() uint64 {
	if m != nil && m.PppRxChapSuccessCount != nil {
		return *m.PppRxChapSuccessCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppRxChapFailCount() uint64 {
	if m != nil && m.PppRxChapFailCount != nil {
		return *m.PppRxChapFailCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppRxIpcpConfReqCount() uint64 {
	if m != nil && m.PppRxIpcpConfReqCount != nil {
		return *m.PppRxIpcpConfReqCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppRxIpcpConfAckCount() uint64 {
	if m != nil && m.PppRxIpcpConfAckCount != nil {
		return *m.PppRxIpcpConfAckCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppRxIpcpConfNackCount() uint64 {
	if m != nil && m.PppRxIpcpConfNackCount != nil {
		return *m.PppRxIpcpConfNackCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetRxMalformedCnt() uint64 {
	if m != nil && m.RxMalformedCnt != nil {
		return *m.RxMalformedCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppRxUnknownProtocol() uint64 {
	if m != nil && m.PppRxUnknownProtocol != nil {
		return *m.PppRxUnknownProtocol
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetRxMsgCnt() uint64 {
	if m != nil && m.RxMsgCnt != nil {
		return *m.RxMsgCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetRxMsgProcessdCnt() uint64 {
	if m != nil && m.RxMsgProcessdCnt != nil {
		return *m.RxMsgProcessdCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetRxMsgErr() uint64 {
	if m != nil && m.RxMsgErr != nil {
		return *m.RxMsgErr
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetRxInvalidMsgCnt() uint64 {
	if m != nil && m.RxInvalidMsgCnt != nil {
		return *m.RxInvalidMsgCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetTxCnt() uint64 {
	if m != nil && m.TxCnt != nil {
		return *m.TxCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppTxLcpConfReqCount() uint64 {
	if m != nil && m.PppTxLcpConfReqCount != nil {
		return *m.PppTxLcpConfReqCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppTxLcpConfAckCount() uint64 {
	if m != nil && m.PppTxLcpConfAckCount != nil {
		return *m.PppTxLcpConfAckCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppTxLcpConfNackCount() uint64 {
	if m != nil && m.PppTxLcpConfNackCount != nil {
		return *m.PppTxLcpConfNackCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppTxLcpEchoReqCount() uint64 {
	if m != nil && m.PppTxLcpEchoReqCount != nil {
		return *m.PppTxLcpEchoReqCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppTxLcpEchoRespCount() uint64 {
	if m != nil && m.PppTxLcpEchoRespCount != nil {
		return *m.PppTxLcpEchoRespCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppTxLcpTermReqCount() uint64 {
	if m != nil && m.PppTxLcpTermReqCount != nil {
		return *m.PppTxLcpTermReqCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppTxLcpTermAckCount() uint64 {
	if m != nil && m.PppTxLcpTermAckCount != nil {
		return *m.PppTxLcpTermAckCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppTxPapReqCount() uint64 {
	if m != nil && m.PppTxPapReqCount != nil {
		return *m.PppTxPapReqCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppTxPapAckCount() uint64 {
	if m != nil && m.PppTxPapAckCount != nil {
		return *m.PppTxPapAckCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppTxPapNackCount() uint64 {
	if m != nil && m.PppTxPapNackCount != nil {
		return *m.PppTxPapNackCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppTxChapChallengeCount() uint64 {
	if m != nil && m.PppTxChapChallengeCount != nil {
		return *m.PppTxChapChallengeCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppTxChapRespCount() uint64 {
	if m != nil && m.PppTxChapRespCount != nil {
		return *m.PppTxChapRespCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppTxChapSuccessCount() uint64 {
	if m != nil && m.PppTxChapSuccessCount != nil {
		return *m.PppTxChapSuccessCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppTxChapFailCount() uint64 {
	if m != nil && m.PppTxChapFailCount != nil {
		return *m.PppTxChapFailCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppTxIpcpConfReqCount() uint64 {
	if m != nil && m.PppTxIpcpConfReqCount != nil {
		return *m.PppTxIpcpConfReqCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppTxIpcpConfAckCount() uint64 {
	if m != nil && m.PppTxIpcpConfAckCount != nil {
		return *m.PppTxIpcpConfAckCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppTxIpcpConfNackCount() uint64 {
	if m != nil && m.PppTxIpcpConfNackCount != nil {
		return *m.PppTxIpcpConfNackCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetPppTxUnknownProtocol() uint64 {
	if m != nil && m.PppTxUnknownProtocol != nil {
		return *m.PppTxUnknownProtocol
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetTxPktSendFailed() uint64 {
	if m != nil && m.TxPktSendFailed != nil {
		return *m.TxPktSendFailed
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetTxPktErr() uint64 {
	if m != nil && m.TxPktErr != nil {
		return *m.TxPktErr
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetTxMsgCnt() uint64 {
	if m != nil && m.TxMsgCnt != nil {
		return *m.TxMsgCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType) GetTxMsgErr() uint64 {
	if m != nil && m.TxMsgErr != nil {
		return *m.TxMsgErr
	}
	return 0
}

type JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDvlanType struct {
	RxPacketCnt          *uint64  `protobuf:"varint,51,opt,name=rx_packet_cnt,json=rxPacketCnt" json:"rx_packet_cnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDvlanType) Reset() {
	*m = JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDvlanType{}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDvlanType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDvlanType) ProtoMessage() {
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDvlanType) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcec3dee7e0b9012, []int{0, 0, 0, 0, 0, 5}
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDvlanType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDvlanType.Unmarshal(m, b)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDvlanType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDvlanType.Marshal(b, m, deterministic)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDvlanType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDvlanType.Merge(m, src)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDvlanType) XXX_Size() int {
	return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDvlanType.Size(m)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDvlanType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDvlanType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDvlanType proto.InternalMessageInfo

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDvlanType) GetRxPacketCnt() uint64 {
	if m != nil && m.RxPacketCnt != nil {
		return *m.RxPacketCnt
	}
	return 0
}

type JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType struct {
	RxNetworkPktCnt          *uint64  `protobuf:"varint,51,opt,name=rx_network_pkt_cnt,json=rxNetworkPktCnt" json:"rx_network_pkt_cnt,omitempty"`
	RxMalformedPktCnt        *uint64  `protobuf:"varint,52,opt,name=rx_malformed_pkt_cnt,json=rxMalformedPktCnt" json:"rx_malformed_pkt_cnt,omitempty"`
	RxNoIfPktCnt             *uint64  `protobuf:"varint,53,opt,name=rx_no_if_pkt_cnt,json=rxNoIfPktCnt" json:"rx_no_if_pkt_cnt,omitempty"`
	RxSendSucceededPktCnt    *uint64  `protobuf:"varint,54,opt,name=rx_send_succeeded_pkt_cnt,json=rxSendSucceededPktCnt" json:"rx_send_succeeded_pkt_cnt,omitempty"`
	RxSendFailedPktCnt       *uint64  `protobuf:"varint,55,opt,name=rx_send_failed_pkt_cnt,json=rxSendFailedPktCnt" json:"rx_send_failed_pkt_cnt,omitempty"`
	RxUnsupportedPktCnt      *uint64  `protobuf:"varint,56,opt,name=rx_unsupported_pkt_cnt,json=rxUnsupportedPktCnt" json:"rx_unsupported_pkt_cnt,omitempty"`
	RxSetupRequestCnt        *uint64  `protobuf:"varint,57,opt,name=rx_setup_request_cnt,json=rxSetupRequestCnt" json:"rx_setup_request_cnt,omitempty"`
	RxHelloPktCnt            *uint64  `protobuf:"varint,58,opt,name=rx_hello_pkt_cnt,json=rxHelloPktCnt" json:"rx_hello_pkt_cnt,omitempty"`
	RxTearDownPktCnt         *uint64  `protobuf:"varint,59,opt,name=rx_tear_down_pkt_cnt,json=rxTearDownPktCnt" json:"rx_tear_down_pkt_cnt,omitempty"`
	RxNotifyPktCnt           *uint64  `protobuf:"varint,60,opt,name=rx_notify_pkt_cnt,json=rxNotifyPktCnt" json:"rx_notify_pkt_cnt,omitempty"`
	TxNetworkPktCnt          *uint64  `protobuf:"varint,61,opt,name=tx_network_pkt_cnt,json=txNetworkPktCnt" json:"tx_network_pkt_cnt,omitempty"`
	TxNullPktCnt             *uint64  `protobuf:"varint,62,opt,name=tx_null_pkt_cnt,json=txNullPktCnt" json:"tx_null_pkt_cnt,omitempty"`
	TxNoIfPktCnt             *uint64  `protobuf:"varint,63,opt,name=tx_no_if_pkt_cnt,json=txNoIfPktCnt" json:"tx_no_if_pkt_cnt,omitempty"`
	TxSendSucceededPktCnt    *uint64  `protobuf:"varint,64,opt,name=tx_send_succeeded_pkt_cnt,json=txSendSucceededPktCnt" json:"tx_send_succeeded_pkt_cnt,omitempty"`
	TxSendFailedPktCnt       *uint64  `protobuf:"varint,65,opt,name=tx_send_failed_pkt_cnt,json=txSendFailedPktCnt" json:"tx_send_failed_pkt_cnt,omitempty"`
	TxSetupRequestPktCnt     *uint64  `protobuf:"varint,66,opt,name=tx_setup_request_pkt_cnt,json=txSetupRequestPktCnt" json:"tx_setup_request_pkt_cnt,omitempty"`
	TxSetupAcceptPktCnt      *uint64  `protobuf:"varint,67,opt,name=tx_setup_accept_pkt_cnt,json=txSetupAcceptPktCnt" json:"tx_setup_accept_pkt_cnt,omitempty"`
	TxSetupDenyPktCnt        *uint64  `protobuf:"varint,68,opt,name=tx_setup_deny_pkt_cnt,json=txSetupDenyPktCnt" json:"tx_setup_deny_pkt_cnt,omitempty"`
	TxHelloPktCnt            *uint64  `protobuf:"varint,69,opt,name=tx_hello_pkt_cnt,json=txHelloPktCnt" json:"tx_hello_pkt_cnt,omitempty"`
	TxTearDownPktCnt         *uint64  `protobuf:"varint,70,opt,name=tx_tear_down_pkt_cnt,json=txTearDownPktCnt" json:"tx_tear_down_pkt_cnt,omitempty"`
	TxNotifyPktCnt           *uint64  `protobuf:"varint,71,opt,name=tx_notify_pkt_cnt,json=txNotifyPktCnt" json:"tx_notify_pkt_cnt,omitempty"`
	InflightHagSessionsCnt   *uint64  `protobuf:"varint,72,opt,name=inflight_hag_sessions_cnt,json=inflightHagSessionsCnt" json:"inflight_hag_sessions_cnt,omitempty"`
	SuccessfulHagSessionsCnt *uint64  `protobuf:"varint,73,opt,name=successful_hag_sessions_cnt,json=successfulHagSessionsCnt" json:"successful_hag_sessions_cnt,omitempty"`
	FailedHagSessionsCnt     *uint64  `protobuf:"varint,74,opt,name=failed_hag_sessions_cnt,json=failedHagSessionsCnt" json:"failed_hag_sessions_cnt,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType) Reset() {
	*m = JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType{}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType) ProtoMessage() {
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcec3dee7e0b9012, []int{0, 0, 0, 0, 0, 6}
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType.Unmarshal(m, b)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType.Marshal(b, m, deterministic)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType.Merge(m, src)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType) XXX_Size() int {
	return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType.Size(m)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType proto.InternalMessageInfo

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType) GetRxNetworkPktCnt() uint64 {
	if m != nil && m.RxNetworkPktCnt != nil {
		return *m.RxNetworkPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType) GetRxMalformedPktCnt() uint64 {
	if m != nil && m.RxMalformedPktCnt != nil {
		return *m.RxMalformedPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType) GetRxNoIfPktCnt() uint64 {
	if m != nil && m.RxNoIfPktCnt != nil {
		return *m.RxNoIfPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType) GetRxSendSucceededPktCnt() uint64 {
	if m != nil && m.RxSendSucceededPktCnt != nil {
		return *m.RxSendSucceededPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType) GetRxSendFailedPktCnt() uint64 {
	if m != nil && m.RxSendFailedPktCnt != nil {
		return *m.RxSendFailedPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType) GetRxUnsupportedPktCnt() uint64 {
	if m != nil && m.RxUnsupportedPktCnt != nil {
		return *m.RxUnsupportedPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType) GetRxSetupRequestCnt() uint64 {
	if m != nil && m.RxSetupRequestCnt != nil {
		return *m.RxSetupRequestCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType) GetRxHelloPktCnt() uint64 {
	if m != nil && m.RxHelloPktCnt != nil {
		return *m.RxHelloPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType) GetRxTearDownPktCnt() uint64 {
	if m != nil && m.RxTearDownPktCnt != nil {
		return *m.RxTearDownPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType) GetRxNotifyPktCnt() uint64 {
	if m != nil && m.RxNotifyPktCnt != nil {
		return *m.RxNotifyPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType) GetTxNetworkPktCnt() uint64 {
	if m != nil && m.TxNetworkPktCnt != nil {
		return *m.TxNetworkPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType) GetTxNullPktCnt() uint64 {
	if m != nil && m.TxNullPktCnt != nil {
		return *m.TxNullPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType) GetTxNoIfPktCnt() uint64 {
	if m != nil && m.TxNoIfPktCnt != nil {
		return *m.TxNoIfPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType) GetTxSendSucceededPktCnt() uint64 {
	if m != nil && m.TxSendSucceededPktCnt != nil {
		return *m.TxSendSucceededPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType) GetTxSendFailedPktCnt() uint64 {
	if m != nil && m.TxSendFailedPktCnt != nil {
		return *m.TxSendFailedPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType) GetTxSetupRequestPktCnt() uint64 {
	if m != nil && m.TxSetupRequestPktCnt != nil {
		return *m.TxSetupRequestPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType) GetTxSetupAcceptPktCnt() uint64 {
	if m != nil && m.TxSetupAcceptPktCnt != nil {
		return *m.TxSetupAcceptPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType) GetTxSetupDenyPktCnt() uint64 {
	if m != nil && m.TxSetupDenyPktCnt != nil {
		return *m.TxSetupDenyPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType) GetTxHelloPktCnt() uint64 {
	if m != nil && m.TxHelloPktCnt != nil {
		return *m.TxHelloPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType) GetTxTearDownPktCnt() uint64 {
	if m != nil && m.TxTearDownPktCnt != nil {
		return *m.TxTearDownPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType) GetTxNotifyPktCnt() uint64 {
	if m != nil && m.TxNotifyPktCnt != nil {
		return *m.TxNotifyPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType) GetInflightHagSessionsCnt() uint64 {
	if m != nil && m.InflightHagSessionsCnt != nil {
		return *m.InflightHagSessionsCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType) GetSuccessfulHagSessionsCnt() uint64 {
	if m != nil && m.SuccessfulHagSessionsCnt != nil {
		return *m.SuccessfulHagSessionsCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType) GetFailedHagSessionsCnt() uint64 {
	if m != nil && m.FailedHagSessionsCnt != nil {
		return *m.FailedHagSessionsCnt
	}
	return 0
}

var E_JnprJunosNetworkStatsExt = &proto.ExtensionDesc{
	ExtendedType:  (*JuniperNetworksSensors)(nil),
	ExtensionType: (*JunosNetworkStats)(nil),
	Field:         39,
	Name:          "jnpr_junos_network_stats_ext",
	Tag:           "bytes,39,opt,name=jnpr_junos_network_stats_ext",
	Filename:      "bbe-smgd_sub_mgmt_network_stats_oc.proto",
}

func init() {
	proto.RegisterType((*JunosNetworkStats)(nil), "junos_network_stats")
	proto.RegisterType((*JunosNetworkStatsSystemType)(nil), "junos_network_stats.system_type")
	proto.RegisterType((*JunosNetworkStatsSystemTypeSubscriberManagementType)(nil), "junos_network_stats.system_type.subscriber_management_type")
	proto.RegisterType((*JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraType)(nil), "junos_network_stats.system_type.subscriber_management_type.infra_type")
	proto.RegisterType((*JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkType)(nil), "junos_network_stats.system_type.subscriber_management_type.infra_type.network_type")
	proto.RegisterType((*JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeIoType)(nil), "junos_network_stats.system_type.subscriber_management_type.infra_type.network_type.io_type")
	proto.RegisterType((*JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDhcpType)(nil), "junos_network_stats.system_type.subscriber_management_type.infra_type.network_type.dhcp_type")
	proto.RegisterType((*JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppType)(nil), "junos_network_stats.system_type.subscriber_management_type.infra_type.network_type.ppp_type")
	proto.RegisterType((*JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypePppoeType)(nil), "junos_network_stats.system_type.subscriber_management_type.infra_type.network_type.pppoe_type")
	proto.RegisterType((*JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeL2TpType)(nil), "junos_network_stats.system_type.subscriber_management_type.infra_type.network_type.l2tp_type")
	proto.RegisterType((*JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeDvlanType)(nil), "junos_network_stats.system_type.subscriber_management_type.infra_type.network_type.dvlan_type")
	proto.RegisterType((*JunosNetworkStatsSystemTypeSubscriberManagementTypeInfraTypeNetworkTypeHagType)(nil), "junos_network_stats.system_type.subscriber_management_type.infra_type.network_type.hag_type")
	proto.RegisterExtension(E_JnprJunosNetworkStatsExt)
}

func init() {
	proto.RegisterFile("bbe-smgd_sub_mgmt_network_stats_oc.proto", fileDescriptor_dcec3dee7e0b9012)
}

var fileDescriptor_dcec3dee7e0b9012 = []byte{
	// 3000 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x5a, 0xdd, 0x76, 0x14, 0xc7,
	0x11, 0x3e, 0x76, 0x8c, 0x0d, 0x8d, 0x00, 0x69, 0x24, 0xa1, 0x65, 0xc1, 0x36, 0xb1, 0x63, 0x43,
	0x4e, 0x62, 0xd9, 0x91, 0xc4, 0x22, 0x21, 0x30, 0x16, 0xfa, 0x31, 0xc2, 0x92, 0x58, 0x4b, 0x0b,
	0xfe, 0xc5, 0xe3, 0xd1, 0x4c, 0xef, 0xee, 0xa0, 0xd9, 0x99, 0x76, 0x4f, 0xad, 0x58, 0x3d, 0x49,
	0xfe, 0xaf, 0x73, 0x95, 0xdb, 0xdc, 0xe7, 0x29, 0x72, 0xe2, 0xbb, 0xdc, 0xe6, 0x0d, 0x72, 0x97,
	0xd3, 0x5d, 0xdd, 0x33, 0xdd, 0x33, 0xbd, 0xb1, 0x73, 0x12, 0xdd, 0x70, 0x38, 0xdb, 0xdf, 0xd7,
	0x55, 0x5d, 0xd5, 0xf5, 0x55, 0x6d, 0xaf, 0xc8, 0xcd, 0xc3, 0x43, 0xfa, 0x5e, 0x3e, 0xe8, 0x45,
	0x7e, 0x3e, 0x3c, 0xf4, 0x07, 0xbd, 0x01, 0xf8, 0x29, 0x85, 0x17, 0x19, 0x3f, 0xf2, 0x73, 0x08,
	0x20, 0xf7, 0xb3, 0x70, 0x9e, 0xf1, 0x0c, 0xb2, 0xe6, 0x34, 0xd0, 0x84, 0x0e, 0x28, 0xf0, 0x13,
	0x1f, 0x32, 0x86, 0x1f, 0xbe, 0xf5, 0xe7, 0x36, 0x99, 0x7e, 0x3e, 0x4c, 0xb3, 0xdc, 0x66, 0x79,
	0x2b, 0xe4, 0xd5, 0xfc, 0x24, 0x07, 0x3a, 0x68, 0xfc, 0xfa, 0xa5, 0xeb, 0x2f, 0xdd, 0x3c, 0xbf,
	0x70, 0x7d, 0xde, 0x01, 0x9b, 0x47, 0x8c, 0x0f, 0x27, 0x8c, 0xee, 0x2b, 0x42, 0xf3, 0xfb, 0xc7,
	0xe4, 0xbc, 0xf1, 0xb9, 0xf7, 0x1d, 0x99, 0xcd, 0x87, 0x87, 0x79, 0xc8, 0xe3, 0x43, 0xca, 0xfd,
	0x41, 0x90, 0x06, 0x3d, 0x3a, 0xa0, 0x29, 0xe8, 0x9d, 0x57, 0x7f, 0x68, 0xe7, 0x79, 0x27, 0x1d,
	0x8d, 0xce, 0x94, 0x6b, 0xbb, 0xc5, 0x52, 0xf3, 0x6f, 0x7b, 0xa4, 0x39, 0x9e, 0xe4, 0x3d, 0x23,
	0x67, 0xe2, 0xb4, 0xcb, 0x03, 0xed, 0xc1, 0xd6, 0xff, 0xe0, 0xc1, 0xbc, 0xdc, 0x09, 0x9d, 0xc1,
	0x5d, 0x9b, 0x7f, 0xdf, 0x25, 0xa4, 0xfc, 0xd4, 0x4b, 0xc9, 0x6b, 0x6a, 0x63, 0x6d, 0xef, 0xe0,
	0xff, 0x63, 0x6f, 0x5e, 0xf3, 0xa5, 0x71, 0x6d, 0xa4, 0xf9, 0xfd, 0x0e, 0x99, 0x30, 0x57, 0xbc,
	0x84, 0xbc, 0x1c, 0x67, 0xda, 0xf6, 0x57, 0xa7, 0x60, 0x7b, 0x3e, 0xce, 0xd0, 0x87, 0x97, 0xe3,
	0xcc, 0xe3, 0xe4, 0x95, 0xa8, 0x1f, 0xb2, 0xc6, 0x6f, 0xd0, 0xde, 0xb3, 0xd3, 0xb0, 0x27, 0x0c,
	0xa0, 0x45, 0x69, 0xcb, 0xcb, 0xc8, 0x4f, 0x18, 0x63, 0x8d, 0xdf, 0xa2, 0xc9, 0xaf, 0x4f, 0xc3,
	0x24, 0x63, 0xca, 0xa2, 0xb0, 0xe4, 0x0d, 0xc9, 0x19, 0xc6, 0x58, 0x46, 0x1b, 0xbf, 0x43, 0x93,
	0xdf, 0x9c, 0x92, 0xc9, 0x8c, 0xaa, 0x9b, 0x25, 0xff, 0x2f, 0x62, 0x9b, 0x2c, 0x00, 0x6b, 0xfc,
	0xfe, 0x14, 0x63, 0x2b, 0x0c, 0xa8, 0xd8, 0x8a, 0xff, 0x8a, 0xa3, 0x46, 0xc7, 0x49, 0x90, 0x36,
	0xfe, 0x70, 0x8a, 0x47, 0x95, 0x16, 0xd4, 0x51, 0xe5, 0xff, 0x45, 0x4a, 0xfb, 0x41, 0xaf, 0xf1,
	0xc7, 0x53, 0x4c, 0x69, 0x3f, 0xe8, 0xa9, 0x94, 0xf6, 0x83, 0x5e, 0xf3, 0x5f, 0x17, 0xc8, 0x6b,
	0xea, 0x1e, 0x7b, 0x3f, 0x27, 0x53, 0xc9, 0x82, 0xcf, 0x47, 0x3e, 0x0b, 0xc2, 0x23, 0x0a, 0xb9,
	0x1f, 0xa6, 0xd0, 0x58, 0xbc, 0xfe, 0xd2, 0xcd, 0x57, 0xf6, 0x2f, 0x26, 0x0b, 0xfb, 0xa3, 0x36,
	0x7e, 0xbc, 0x9e, 0x82, 0xf7, 0x3e, 0x99, 0xb1, 0xa1, 0xdd, 0x20, 0x4e, 0x68, 0xd4, 0x58, 0x92,
	0xe8, 0x29, 0x03, 0xbd, 0x25, 0x17, 0xbc, 0xf7, 0xc8, 0x34, 0x12, 0x06, 0x41, 0xd2, 0xcd, 0xf8,
	0x80, 0x46, 0x72, 0xf7, 0x5b, 0x12, 0x3f, 0x29, 0xf0, 0xbb, 0x7a, 0x41, 0xec, 0x5f, 0xb8, 0x12,
	0x77, 0x23, 0x3f, 0x4e, 0x8f, 0x83, 0x24, 0x8e, 0x1a, 0xad, 0xd2, 0x95, 0xed, 0x6e, 0xb4, 0x8d,
	0x9f, 0x9a, 0xd0, 0xa4, 0x80, 0xde, 0x36, 0xa1, 0x89, 0x86, 0xbe, 0x4b, 0x26, 0x11, 0x9a, 0x66,
	0x7e, 0xdc, 0xed, 0x4a, 0x0f, 0x96, 0x25, 0x72, 0x42, 0x20, 0xf7, 0xb2, 0xed, 0x6e, 0x57, 0x58,
	0x5f, 0x20, 0x97, 0xf5, 0x96, 0x7e, 0xc8, 0x69, 0x00, 0x54, 0x9f, 0x6f, 0x45, 0xa2, 0x3d, 0xdc,
	0x77, 0x5d, 0x2e, 0xa9, 0x03, 0x7e, 0x4a, 0x6e, 0x24, 0x0b, 0xfe, 0xe1, 0x21, 0xf5, 0xe3, 0xcc,
	0xe7, 0xe1, 0xb1, 0x9f, 0x2c, 0xfa, 0xc3, 0xf4, 0x28, 0xcd, 0x5e, 0xa4, 0x7e, 0x10, 0x45, 0x9c,
	0xe6, 0x22, 0x48, 0x83, 0x38, 0x39, 0x69, 0xdc, 0x91, 0x9b, 0x5c, 0x4f, 0x16, 0x1e, 0x1c, 0xd2,
	0xed, 0x6c, 0x3f, 0x3c, 0xde, 0x59, 0x7c, 0x82, 0xc8, 0x35, 0x04, 0x6e, 0x49, 0x9c, 0xb7, 0x41,
	0xde, 0x44, 0x37, 0x86, 0x69, 0x3e, 0x64, 0x2c, 0xe3, 0x40, 0x45, 0x30, 0x28, 0xf8, 0xb2, 0x8b,
	0x85, 0x59, 0xd2, 0x58, 0x95, 0x5b, 0x5d, 0x15, 0xfe, 0x3c, 0x29, 0x41, 0xdb, 0x29, 0x85, 0xb6,
	0x82, 0x78, 0x5b, 0xe4, 0xba, 0x7b, 0x97, 0x56, 0xb9, 0xcd, 0x5d, 0xb9, 0xcd, 0x35, 0xc7, 0x36,
	0xad, 0x62, 0x9f, 0x07, 0xe4, 0x8d, 0xfa, 0x3e, 0xc3, 0x88, 0x95, 0xbb, 0xdc, 0x93, 0xbb, 0x34,
	0x2b, 0xbb, 0x3c, 0x89, 0x58, 0xb1, 0xc7, 0x32, 0xb9, 0x52, 0xdf, 0x83, 0x0d, 0x53, 0xf0, 0x83,
	0x6e, 0xe3, 0x43, 0x49, 0x9f, 0xad, 0xd0, 0xdb, 0xc3, 0x14, 0xd6, 0xba, 0xde, 0x1d, 0x72, 0x15,
	0x99, 0xc7, 0x4b, 0x7e, 0x14, 0x40, 0xe0, 0xb3, 0x00, 0xfa, 0x48, 0x65, 0x47, 0xd0, 0xb8, 0x5f,
	0x72, 0x9f, 0x2e, 0x6d, 0x04, 0x10, 0xb4, 0x03, 0xe8, 0x0b, 0x6a, 0xfb, 0x08, 0xbc, 0x75, 0x1d,
	0x01, 0x27, 0xd7, 0x8f, 0x78, 0xc6, 0x1a, 0x1f, 0xc9, 0x0d, 0xae, 0x38, 0x37, 0xd8, 0xe0, 0x19,
	0x33, 0x1c, 0x68, 0xb9, 0x1c, 0x58, 0x33, 0x1c, 0x68, 0x8d, 0x77, 0xa0, 0x35, 0xd6, 0x81, 0x07,
	0x86, 0x03, 0x2d, 0x97, 0x03, 0x78, 0xcf, 0xc1, 0xae, 0xce, 0x75, 0x7d, 0xcf, 0x3b, 0x66, 0x75,
	0x62, 0xb1, 0x41, 0xb5, 0xd8, 0x36, 0x74, 0xb1, 0x75, 0xec, 0x62, 0xc3, 0xb2, 0x00, 0x55, 0x16,
	0x88, 0xdd, 0xd4, 0x65, 0xd1, 0x91, 0x65, 0x61, 0x14, 0x25, 0xd8, 0x95, 0xb6, 0x55, 0x7a, 0x60,
	0x54, 0xda, 0x2d, 0xd2, 0x28, 0xab, 0x21, 0xa7, 0x69, 0x24, 0x68, 0xaa, 0x86, 0x3e, 0x96, 0x8c,
	0x69, 0x75, 0xfd, 0x0f, 0x68, 0x1a, 0x75, 0x46, 0xaa, 0x88, 0x36, 0x64, 0xa0, 0x9c, 0x34, 0x9f,
	0x05, 0x1c, 0xe2, 0x20, 0x69, 0x3c, 0xd4, 0xb7, 0xac, 0x46, 0x6f, 0x23, 0xc2, 0xfb, 0x90, 0xbc,
	0x8e, 0x7e, 0x1e, 0x2f, 0xf9, 0xd9, 0x10, 0x7c, 0xca, 0x79, 0xc6, 0xfd, 0x24, 0x0b, 0x03, 0xe1,
	0x36, 0x74, 0x1b, 0xdb, 0x72, 0x8b, 0x39, 0xe1, 0xf3, 0xd3, 0xa5, 0xc7, 0x43, 0xd8, 0x14, 0x80,
	0x1d, 0xb1, 0xbe, 0x9d, 0x42, 0xd7, 0xe0, 0xb7, 0xdc, 0xfc, 0x47, 0x06, 0xbf, 0x55, 0xe7, 0xdf,
	0x20, 0x93, 0xc9, 0x62, 0x29, 0x8e, 0x32, 0x9e, 0x9f, 0x48, 0xca, 0x85, 0x64, 0x51, 0x0b, 0xa3,
	0x08, 0xe8, 0x2a, 0x69, 0x22, 0xd0, 0x2a, 0x07, 0x5d, 0x4e, 0x3b, 0xca, 0xca, 0xa2, 0x5d, 0x0f,
	0xba, 0x96, 0xd0, 0x0a, 0x58, 0x56, 0x76, 0xb5, 0x95, 0x8e, 0x61, 0x45, 0xa4, 0x4d, 0x02, 0x65,
	0x40, 0x55, 0x12, 0xf6, 0x54, 0xda, 0x16, 0x3b, 0x23, 0x11, 0x42, 0x15, 0xff, 0x25, 0x32, 0x87,
	0xd0, 0xe3, 0x25, 0xff, 0x88, 0xf2, 0x94, 0x26, 0x7e, 0x37, 0xe3, 0x2f, 0x02, 0x1e, 0x35, 0x1e,
	0xab, 0xac, 0x2d, 0x8a, 0x98, 0x7d, 0x22, 0xd7, 0xb6, 0x70, 0xc9, 0xbb, 0x4f, 0x5e, 0x1f, 0xc3,
	0x92, 0x57, 0x3b, 0x6f, 0xb4, 0x25, 0xb7, 0xe1, 0xe0, 0x8a, 0x9b, 0x9d, 0x1b, 0x66, 0x5b, 0x55,
	0xb3, 0x9f, 0x1a, 0x66, 0x5b, 0xe3, 0xcc, 0xb6, 0xdc, 0x66, 0xf7, 0x0d, 0xb3, 0xad, 0xba, 0xd9,
	0xe6, 0x5f, 0xce, 0x90, 0x73, 0xc5, 0x4c, 0xe5, 0xbd, 0x45, 0x2e, 0xd8, 0x29, 0xc3, 0xce, 0x77,
	0x9e, 0x1b, 0xa1, 0xbc, 0x4a, 0xce, 0x51, 0x1e, 0xa8, 0xed, 0xb1, 0xd7, 0x9d, 0xa5, 0x3c, 0xc0,
	0x53, 0xdc, 0x24, 0x93, 0xd8, 0x5a, 0xc2, 0x2c, 0x4d, 0x69, 0x08, 0x71, 0x96, 0xaa, 0xfe, 0x76,
	0x91, 0x8f, 0xf6, 0xb2, 0xf5, 0xe2, 0x53, 0x85, 0xb4, 0x8b, 0xb3, 0xa5, 0x91, 0x56, 0x69, 0xbe,
	0x49, 0x26, 0x74, 0xbb, 0x92, 0x28, 0xec, 0x6b, 0xe7, 0xb8, 0x2c, 0x4a, 0x01, 0xf8, 0x19, 0xb9,
	0x58, 0x69, 0x7d, 0xaa, 0xa1, 0x71, 0xb3, 0x1c, 0x11, 0x65, 0xe6, 0x7f, 0x45, 0xa3, 0x8c, 0xec,
	0xbf, 0x45, 0x2e, 0xd8, 0xd7, 0x09, 0x1b, 0xd5, 0x79, 0x30, 0x22, 0xf0, 0x3e, 0x99, 0xd6, 0xfa,
	0x03, 0x3c, 0x48, 0xf3, 0x41, 0x0c, 0x40, 0x23, 0xd5, 0x87, 0x3c, 0xb5, 0xd4, 0x29, 0x57, 0xc4,
	0x59, 0x6b, 0x42, 0x84, 0xed, 0xe6, 0x22, 0xd8, 0x67, 0x7d, 0x83, 0x9c, 0x17, 0x1a, 0x34, 0x4c,
	0x12, 0xa9, 0xa8, 0xd8, 0x4d, 0xce, 0xc1, 0x68, 0x6f, 0x98, 0x24, 0x42, 0x45, 0xdf, 0x24, 0x13,
	0x60, 0xc6, 0xe2, 0xc3, 0x02, 0xa0, 0x62, 0xf1, 0x53, 0xe9, 0xbf, 0xd1, 0xdb, 0xb1, 0x2b, 0x10,
	0x28, 0x3b, 0x7b, 0x01, 0xe1, 0x80, 0x47, 0xfc, 0xa8, 0x84, 0xec, 0x83, 0x3c, 0x21, 0x46, 0x21,
	0xe0, 0x4c, 0x87, 0x6a, 0x4d, 0x47, 0x61, 0x8d, 0x33, 0x2b, 0x52, 0x71, 0xb7, 0x08, 0xfa, 0x03,
	0x8d, 0xd9, 0xee, 0x1a, 0x31, 0xaf, 0xd4, 0x1c, 0x8a, 0xf5, 0x04, 0x98, 0x31, 0x5f, 0x24, 0x97,
	0xf9, 0xc8, 0x7f, 0xd1, 0x8f, 0x13, 0xea, 0xa7, 0x19, 0xe8, 0xbb, 0x43, 0x23, 0xa5, 0xd6, 0xd3,
	0x7c, 0xf4, 0x99, 0x58, 0xdc, 0xcb, 0x60, 0x5d, 0x2f, 0x35, 0xff, 0xe9, 0x91, 0xb3, 0x7a, 0x32,
	0xf7, 0x7e, 0x41, 0x3c, 0x71, 0x45, 0xd4, 0x88, 0x27, 0xfa, 0x49, 0x79, 0x79, 0x2f, 0xf1, 0xd1,
	0x1e, 0x2e, 0xb4, 0x8f, 0xb4, 0x16, 0x88, 0x4b, 0x9e, 0x0c, 0x7b, 0x71, 0x5a, 0x60, 0x97, 0xf4,
	0xd5, 0x6b, 0xcb, 0xcf, 0x15, 0xf4, 0x97, 0x64, 0x9a, 0x8f, 0xfc, 0x24, 0x64, 0xc2, 0xa7, 0xae,
	0xcf, 0xe9, 0x77, 0xc6, 0xc4, 0x76, 0x89, 0x8f, 0x76, 0x42, 0xb6, 0x9e, 0xa5, 0xdd, 0x7d, 0xfa,
	0x9d, 0x03, 0x1d, 0x84, 0x47, 0xc6, 0xad, 0x2e, 0xd1, 0x6b, 0xe1, 0x91, 0x40, 0xcf, 0x93, 0x19,
	0x13, 0x9d, 0x6a, 0x38, 0x5e, 0xef, 0xc9, 0x02, 0xbe, 0x17, 0x20, 0xbe, 0xe6, 0xcb, 0x73, 0x63,
	0x76, 0x33, 0x7d, 0x79, 0x6e, 0xa3, 0x81, 0xf2, 0x41, 0xe1, 0xf9, 0x8a, 0x81, 0xee, 0x50, 0x3e,
	0xa8, 0x79, 0x2e, 0xd1, 0xda, 0x95, 0x3b, 0x15, 0xf4, 0x5a, 0xdd, 0x93, 0x88, 0x16, 0x9e, 0xac,
	0x5a, 0x9e, 0x44, 0x54, 0x79, 0xb2, 0x44, 0xe6, 0x14, 0x5a, 0xab, 0x7a, 0xc1, 0xb8, 0xab, 0xd3,
	0xbb, 0x13, 0x16, 0xf3, 0x51, 0xcd, 0x7f, 0x1a, 0xf6, 0xb3, 0xc2, 0xff, 0x7b, 0x86, 0x8d, 0xcd,
	0xb0, 0x9f, 0x29, 0xff, 0x3f, 0x20, 0xb3, 0x36, 0x9a, 0x25, 0x27, 0x46, 0x7d, 0x4c, 0x19, 0x78,
	0x96, 0x9c, 0xa8, 0xf1, 0x56, 0x31, 0xa2, 0x38, 0x0f, 0x85, 0x5e, 0x6a, 0x13, 0x58, 0x30, 0x9e,
	0xa4, 0x6c, 0xe0, 0x9a, 0xb2, 0xf2, 0xb6, 0x54, 0x10, 0x16, 0xb0, 0x02, 0xfb, 0x51, 0x29, 0x8f,
	0xac, 0x06, 0xd2, 0x51, 0x5c, 0x33, 0x40, 0x2a, 0x82, 0xef, 0x90, 0x4b, 0x0a, 0x54, 0xa4, 0xfd,
	0x81, 0x16, 0xa3, 0x76, 0xc0, 0x74, 0xca, 0x7f, 0x25, 0x8f, 0x15, 0xf6, 0x03, 0x26, 0xfe, 0x49,
	0x12, 0x9a, 0xf6, 0xa8, 0x31, 0xf2, 0x78, 0x7c, 0xb4, 0xde, 0x0f, 0xd8, 0xba, 0x5e, 0x12, 0x94,
	0x1b, 0x52, 0x56, 0x25, 0x85, 0xd3, 0x9c, 0x19, 0x33, 0xcf, 0x05, 0x44, 0xef, 0xd3, 0x9c, 0xa9,
	0xf9, 0x48, 0x03, 0xf3, 0x61, 0x18, 0x8a, 0xd1, 0xbc, 0x9c, 0x79, 0x26, 0x11, 0x7b, 0x80, 0x0b,
	0x15, 0xb8, 0xa8, 0xe4, 0x21, 0x47, 0x47, 0xb6, 0x4c, 0xf8, 0x16, 0x2e, 0x94, 0x07, 0x8c, 0x59,
	0x58, 0xc6, 0xea, 0xe3, 0x42, 0x93, 0x59, 0xa8, 0x83, 0x65, 0xc0, 0x74, 0x1c, 0x1e, 0x9a, 0x30,
	0x15, 0x2e, 0x3c, 0x94, 0x84, 0x15, 0xf1, 0xda, 0xd6, 0x87, 0x12, 0x38, 0x1d, 0x30, 0x2c, 0xed,
	0x98, 0x1d, 0xb7, 0x0c, 0xc3, 0x8f, 0x74, 0x69, 0x6f, 0xcb, 0xcf, 0x95, 0x69, 0x0b, 0xaa, 0x37,
	0xfd, 0xc4, 0x86, 0x2a, 0xf3, 0xa8, 0x2e, 0x0a, 0x5a, 0x38, 0xb0, 0xa3, 0xaf, 0x22, 0x62, 0xb5,
	0x0b, 0xae, 0xbe, 0xb6, 0xfb, 0xa3, 0xfa, 0xda, 0x5e, 0xb5, 0xaf, 0xbd, 0x23, 0xaf, 0x92, 0x31,
	0x17, 0xa9, 0x01, 0xe4, 0x02, 0x37, 0x87, 0x21, 0x6f, 0x96, 0xbc, 0x0a, 0x23, 0xb9, 0x03, 0xce,
	0x18, 0x67, 0x60, 0xa4, 0x2a, 0x08, 0x1c, 0xda, 0x85, 0xc3, 0xc4, 0x25, 0xa8, 0x6b, 0x17, 0x38,
	0xb4, 0x6b, 0xbf, 0x82, 0x2e, 0xb5, 0x0b, 0x5c, 0xda, 0x75, 0x80, 0xd7, 0x01, 0x1c, 0xda, 0x05,
	0x0e, 0xed, 0xea, 0xd4, 0x7c, 0x79, 0x6e, 0xa3, 0xad, 0xda, 0x7f, 0x62, 0xa0, 0xed, 0xda, 0x07,
	0x67, 0xed, 0x3f, 0xc5, 0xda, 0x07, 0x57, 0xed, 0x83, 0xbb, 0xf6, 0x3f, 0xc3, 0xba, 0x82, 0x7a,
	0xed, 0x97, 0x3e, 0x59, 0x7a, 0xfa, 0xb9, 0xe1, 0x93, 0xad, 0xa7, 0xe0, 0xd0, 0xd3, 0x2f, 0x2a,
	0x68, 0x15, 0xcd, 0xb7, 0x65, 0x97, 0x34, 0x75, 0xe5, 0xcb, 0x72, 0xe8, 0x30, 0x74, 0x05, 0x6c,
	0x5d, 0xf9, 0xca, 0x00, 0x95, 0xba, 0x02, 0x15, 0x5d, 0xf9, 0x5a, 0x37, 0x5c, 0x5b, 0x57, 0xc0,
	0xa9, 0x2b, 0xcf, 0xf4, 0xf9, 0x5d, 0xba, 0x02, 0x55, 0x5d, 0xf9, 0x06, 0x6f, 0x23, 0x54, 0x75,
	0x05, 0x1c, 0xba, 0xe2, 0xeb, 0x9b, 0x51, 0xd7, 0x15, 0x70, 0xe8, 0xca, 0xb7, 0x26, 0xdc, 0xd6,
	0x15, 0xa8, 0xe8, 0x4a, 0xa0, 0x0f, 0x68, 0xeb, 0x0a, 0x54, 0x74, 0xe5, 0xd0, 0x84, 0x95, 0xba,
	0x02, 0x55, 0x5d, 0x09, 0xf5, 0xa1, 0x2a, 0xba, 0x02, 0x35, 0x5d, 0x89, 0xf4, 0x04, 0x57, 0xd5,
	0x15, 0xa8, 0xe9, 0x0a, 0xb5, 0xa1, 0xa5, 0xae, 0x40, 0x5d, 0x57, 0xba, 0xfa, 0x92, 0xd8, 0xba,
	0x82, 0x60, 0xfd, 0x9a, 0xa2, 0xc7, 0x96, 0x9e, 0x06, 0xab, 0xc7, 0x13, 0x35, 0xb7, 0xd4, 0xe7,
	0xae, 0xbe, 0x63, 0xee, 0x72, 0x8d, 0xa5, 0xb1, 0x6b, 0x2c, 0x6d, 0xfe, 0xe3, 0x65, 0x42, 0xca,
	0x37, 0x49, 0xa1, 0x38, 0x7c, 0x64, 0x8c, 0x58, 0x67, 0xf8, 0x48, 0x0d, 0xaf, 0xb2, 0xab, 0x45,
	0xb1, 0x31, 0x52, 0x9d, 0x13, 0x1d, 0x2d, 0x8a, 0xad, 0x75, 0x6e, 0x4c, 0x51, 0xb8, 0xce, 0xc5,
	0xfa, 0x35, 0x42, 0xc4, 0x3a, 0x63, 0xc6, 0xd8, 0x74, 0x96, 0x8f, 0xda, 0x8c, 0x8d, 0x13, 0xd6,
	0xdb, 0x3f, 0x4a, 0x58, 0x97, 0x7f, 0x58, 0x58, 0x57, 0x5c, 0xc2, 0xfa, 0xbe, 0x9c, 0xd0, 0xe4,
	0x79, 0xe4, 0x37, 0x1e, 0x14, 0x84, 0x5c, 0x8d, 0x45, 0x53, 0x78, 0xb0, 0x4d, 0x1e, 0x28, 0xa5,
	0xc8, 0x0d, 0x25, 0x5e, 0x35, 0x95, 0xb8, 0x9e, 0x8d, 0xbb, 0xf5, 0x6c, 0x34, 0xff, 0x3a, 0x4d,
	0xce, 0x15, 0x2f, 0xb0, 0xe3, 0x42, 0xac, 0x42, 0x64, 0x0d, 0xad, 0x22, 0x44, 0x98, 0xf6, 0xb7,
	0xc9, 0x45, 0x11, 0x3d, 0x03, 0x81, 0x31, 0x3e, 0xcf, 0x18, 0xdb, 0xd7, 0xa0, 0x6b, 0x84, 0x40,
	0x09, 0x50, 0x51, 0x06, 0xbd, 0x7a, 0x9b, 0x5c, 0x51, 0x5b, 0xd8, 0x9d, 0x23, 0x1b, 0x16, 0xe1,
	0x9e, 0x91, 0xbb, 0x19, 0xed, 0x43, 0xac, 0xb9, 0x88, 0xf2, 0x46, 0x4b, 0xe2, 0x72, 0x9d, 0x28,
	0x6a, 0x40, 0x12, 0x57, 0x48, 0xb3, 0x4a, 0x4c, 0x4b, 0x26, 0x26, 0x66, 0xd6, 0x64, 0xca, 0x8a,
	0x70, 0xd8, 0x2c, 0x85, 0x59, 0x32, 0xef, 0xd8, 0x36, 0xb5, 0x3a, 0x8f, 0x23, 0x96, 0x26, 0x57,
	0xeb, 0xc4, 0x35, 0xb7, 0xc5, 0xb2, 0x3d, 0x49, 0xe2, 0x5d, 0x9b, 0xa8, 0x7b, 0x94, 0xe3, 0x94,
	0x8a, 0x28, 0x74, 0x54, 0x32, 0xef, 0xd9, 0xa7, 0x44, 0x66, 0xce, 0x90, 0x3a, 0x4f, 0x66, 0x74,
	0x56, 0x75, 0x8b, 0x90, 0x24, 0x9c, 0x6d, 0x27, 0x31, 0xb7, 0xd8, 0x27, 0x1c, 0xf8, 0xf2, 0x5c,
	0xf7, 0x6d, 0x7c, 0x71, 0xa6, 0x0f, 0xc8, 0xac, 0x81, 0x37, 0x62, 0x8f, 0xd3, 0xed, 0x94, 0x26,
	0x94, 0x71, 0xbf, 0x4b, 0xae, 0x2a, 0x46, 0xb5, 0x87, 0x48, 0x1e, 0x0e, 0xbc, 0x73, 0x92, 0x67,
	0x37, 0x12, 0xc9, 0x5e, 0x20, 0x97, 0x4d, 0xb6, 0x11, 0x86, 0x07, 0xea, 0x1b, 0xb4, 0x26, 0x96,
	0x31, 0x58, 0x2e, 0xe2, 0x6e, 0x77, 0x16, 0x49, 0x5b, 0x37, 0xa2, 0x67, 0xb6, 0x17, 0x97, 0x35,
	0x51, 0x80, 0x8a, 0xb6, 0x51, 0xb1, 0x26, 0xea, 0xb0, 0x9a, 0x2c, 0xd9, 0x1b, 0x2a, 0x55, 0xb0,
	0x69, 0x98, 0x13, 0x4d, 0xc2, 0x2a, 0x03, 0x17, 0xb5, 0x8c, 0xe8, 0x96, 0x83, 0x5a, 0xe4, 0x61,
	0xb5, 0x88, 0x6a, 0x49, 0x35, 0xb2, 0x81, 0xf3, 0xf3, 0x65, 0x8b, 0x5b, 0xa6, 0xc4, 0xa5, 0x8e,
	0x0f, 0x9d, 0xea, 0x78, 0x8b, 0xcc, 0x29, 0x33, 0x45, 0x33, 0xd1, 0xaf, 0x6d, 0xdb, 0xc6, 0x05,
	0xd6, 0x0d, 0x45, 0x3f, 0xb5, 0xa1, 0xf2, 0x0c, 0xf2, 0x9e, 0x31, 0x53, 0x9f, 0xe5, 0xa3, 0xdd,
	0xbc, 0x57, 0x7e, 0x3d, 0x10, 0xab, 0x8c, 0x67, 0x22, 0xf8, 0x91, 0x31, 0x4f, 0x4f, 0x4a, 0x58,
	0x5b, 0x2d, 0x94, 0x32, 0x26, 0xe0, 0x94, 0x73, 0x35, 0x49, 0xe3, 0x66, 0x9b, 0x9c, 0xeb, 0x79,
	0x1b, 0xdf, 0x10, 0x0a, 0x93, 0xbb, 0xc5, 0xbc, 0x8d, 0x0b, 0xca, 0x72, 0xa9, 0xb9, 0x7b, 0xa6,
	0xe6, 0xaa, 0x42, 0x05, 0xa7, 0x8e, 0x3d, 0x2e, 0xce, 0xd9, 0x19, 0xa7, 0x63, 0xe0, 0xd4, 0xb1,
	0x76, 0x9d, 0x58, 0xd5, 0x31, 0x70, 0xeb, 0xd8, 0xa7, 0x45, 0xe6, 0x3b, 0x63, 0x75, 0x0c, 0x9c,
	0xaa, 0xb2, 0x6f, 0xdb, 0x74, 0xa9, 0x0a, 0xb8, 0x55, 0xe5, 0xc0, 0xb6, 0x69, 0xab, 0x8a, 0x6d,
	0xb3, 0xa2, 0x9d, 0x1d, 0xdb, 0xa6, 0x4b, 0x3b, 0xc1, 0xa9, 0x9d, 0x4f, 0xea, 0xc4, 0x22, 0x40,
	0x4a, 0x97, 0xa0, 0xaa, 0x63, 0x4f, 0x0b, 0x5d, 0xea, 0xb8, 0x74, 0x0c, 0xaa, 0x3a, 0xf6, 0x99,
	0x8d, 0xaf, 0xea, 0x18, 0xd4, 0x74, 0xec, 0xf3, 0x42, 0xc7, 0x3a, 0x4e, 0x1d, 0x83, 0x31, 0x3a,
	0xf6, 0x45, 0xa1, 0x63, 0x9d, 0xff, 0xa0, 0x63, 0x50, 0xd7, 0xb1, 0x2f, 0x0b, 0x65, 0xe9, 0xb8,
	0x75, 0x0c, 0x9c, 0x3a, 0xf6, 0x95, 0x91, 0xaf, 0x71, 0x3a, 0x06, 0x75, 0x1d, 0xfb, 0xba, 0x62,
	0xad, 0xa6, 0x63, 0xe0, 0xd6, 0xb1, 0x67, 0x86, 0xb9, 0x71, 0x3a, 0x06, 0x6e, 0x1d, 0xfb, 0xc6,
	0x41, 0xad, 0xea, 0x18, 0x8c, 0xd1, 0x31, 0xbf, 0xd0, 0xb1, 0x8e, 0x43, 0xc7, 0x94, 0x3a, 0x81,
	0x43, 0x9d, 0xbe, 0x35, 0xee, 0x56, 0x55, 0x9d, 0x70, 0x3a, 0x16, 0x43, 0x8d, 0x39, 0x66, 0x05,
	0x7a, 0x3a, 0x6e, 0x1f, 0x81, 0x31, 0xf7, 0x96, 0x13, 0x90, 0x50, 0x9f, 0x43, 0x63, 0x02, 0x12,
	0xea, 0x83, 0xab, 0x5a, 0x75, 0x42, 0xbd, 0xaa, 0xe4, 0xa6, 0x5c, 0x15, 0xdc, 0xc8, 0x58, 0xdd,
	0xe4, 0xbc, 0xf9, 0x01, 0x21, 0xe5, 0xef, 0xd9, 0x3f, 0xe6, 0x35, 0xbd, 0xf9, 0xa7, 0x73, 0xe4,
	0xac, 0xfe, 0x35, 0xfa, 0xbf, 0x7b, 0xc6, 0xc4, 0xe9, 0xb4, 0x54, 0x7c, 0x7b, 0x28, 0x9c, 0x32,
	0x54, 0x5f, 0x11, 0xde, 0xd5, 0x6f, 0xf3, 0x71, 0xb7, 0x32, 0x1f, 0x4e, 0xe0, 0x68, 0xac, 0x70,
	0xcb, 0xe4, 0x8a, 0x7e, 0x28, 0x97, 0xf7, 0x93, 0x46, 0xc6, 0xee, 0x38, 0x2f, 0xce, 0xe2, 0x9b,
	0xf9, 0x81, 0x5e, 0x56, 0x4c, 0x7c, 0x54, 0x33, 0x32, 0x50, 0xd0, 0x6e, 0xeb, 0x07, 0xab, 0x32,
	0x0d, 0x8a, 0x83, 0x8f, 0xbf, 0xd6, 0x8f, 0x3f, 0x8a, 0xb3, 0xac, 0x5f, 0x07, 0xcd, 0x5f, 0x7e,
	0xcc, 0xb3, 0xe7, 0x14, 0x86, 0x52, 0x48, 0x86, 0x34, 0x07, 0xe3, 0x79, 0x73, 0x4a, 0x98, 0x81,
	0xa1, 0x50, 0x12, 0xb1, 0x52, 0xbe, 0x20, 0xf5, 0x69, 0x92, 0x64, 0xc5, 0xfe, 0x77, 0xf4, 0xcc,
	0xff, 0x50, 0x7c, 0xac, 0x76, 0xc6, 0x57, 0x59, 0xa0, 0x01, 0xf7, 0x23, 0xf3, 0x8b, 0xd6, 0xaa,
	0xee, 0x64, 0x1d, 0x1a, 0xf0, 0x8d, 0xf2, 0x9b, 0x16, 0x3e, 0x23, 0xa5, 0x19, 0xc4, 0xdd, 0x93,
	0x02, 0x7c, 0xb7, 0xfc, 0xc5, 0x43, 0x7c, 0xae, 0xa0, 0x78, 0x47, 0xab, 0xd9, 0xbd, 0xa7, 0xef,
	0xa8, 0x9d, 0x5d, 0xfc, 0x06, 0xab, 0x7f, 0x08, 0x30, 0xde, 0x32, 0x27, 0x8a, 0x1f, 0x03, 0x54,
	0x4e, 0xa1, 0x9a, 0xd3, 0xfb, 0x05, 0xce, 0xca, 0x29, 0x8c, 0xcd, 0x29, 0xce, 0x79, 0xb3, 0x30,
	0x2e, 0xa7, 0xe0, 0xce, 0xe9, 0x9a, 0x7e, 0x2c, 0xa8, 0xe5, 0xb4, 0x45, 0x1a, 0x50, 0x4d, 0x8f,
	0x66, 0xe1, 0x8c, 0x37, 0x03, 0x56, 0x8a, 0x14, 0x6f, 0x89, 0xcc, 0x15, 0xbc, 0x20, 0x0c, 0x29,
	0x2b, 0x69, 0x38, 0xe3, 0x4d, 0x2b, 0xda, 0x9a, 0x5c, 0x54, 0x2c, 0x7c, 0x00, 0x42, 0x56, 0x44,
	0xd3, 0x32, 0x0d, 0x1b, 0xfa, 0x01, 0x48, 0x72, 0x36, 0x68, 0xaa, 0x33, 0x81, 0xdf, 0xfb, 0xed,
	0xdb, 0xb0, 0xa9, 0xbf, 0xf7, 0x57, 0x6e, 0x03, 0xb8, 0x6e, 0xc3, 0x96, 0x7e, 0x9e, 0xa8, 0xdf,
	0x06, 0xa8, 0xdd, 0x86, 0x8f, 0xf5, 0x57, 0x6a, 0xeb, 0x36, 0xac, 0x90, 0x2b, 0x71, 0xda, 0x4d,
	0xe2, 0x5e, 0x1f, 0x7c, 0x21, 0x00, 0x39, 0xcd, 0xf3, 0x38, 0x4b, 0x73, 0x63, 0x72, 0xbb, 0xac,
	0x01, 0x0f, 0x83, 0xde, 0x81, 0x5a, 0x16, 0xd4, 0x7b, 0xe4, 0xaa, 0x6a, 0x1c, 0xdd, 0x61, 0x52,
	0x27, 0xe3, 0x14, 0xd7, 0x28, 0x21, 0x15, 0xfa, 0x2d, 0x32, 0xa7, 0x32, 0x59, 0xa3, 0xe2, 0x58,
	0x37, 0x83, 0xcb, 0x36, 0xed, 0xce, 0x80, 0x5c, 0x7b, 0x9e, 0x32, 0xee, 0x3b, 0xfe, 0x1c, 0xc7,
	0xa7, 0x23, 0xf0, 0xe6, 0xe6, 0x1f, 0x0d, 0xd3, 0x98, 0x51, 0xae, 0x2e, 0x72, 0x7e, 0x40, 0xd3,
	0x3c, 0xe3, 0x79, 0xe3, 0x86, 0xfc, 0x3b, 0x9e, 0x19, 0xd7, 0xdf, 0xf1, 0xec, 0x37, 0xc4, 0x96,
	0x8f, 0xc4, 0x82, 0x62, 0x1d, 0x88, 0x8f, 0x37, 0x47, 0xf0, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xf0, 0xb5, 0x23, 0xb1, 0xde, 0x28, 0x00, 0x00,
}
